"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[89407],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(a),m=i,g=c["".concat(u,".").concat(m)]||c[m]||p[m]||r;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},62859:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var n=a(87462),i=(a(67294),a(3905));const r={title:"Deployment"},o=void 0,l={unversionedId:"modules/audit/quick_start",id:"modules/audit/quick_start",title:"Deployment",description:"All deploying files at inlong-audit directory, if you use MySQL to store audit data, you need to first create the database through sql/apacheinlongaudit_mysql.sql.",source:"@site/docs/modules/audit/quick_start.md",sourceDirName:"modules/audit",slug:"/modules/audit/quick_start",permalink:"/docs/next/modules/audit/quick_start",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/docs/modules/audit/quick_start.md",tags:[],version:"current",frontMatter:{title:"Deployment"},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/next/modules/audit/configure"},next:{title:"Overview",permalink:"/docs/next/data_node/extract_node/overview"}},u={},s=[{value:"Audit Proxy",id:"audit-proxy",level:2},{value:"Configure MessageQueue",id:"configure-messagequeue",level:3},{value:"Start",id:"start",level:3},{value:"Audit Store",id:"audit-store",level:2},{value:"Configure",id:"configure",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Start",id:"start-1",level:3},{value:"Audit Service",id:"audit-service",level:2},{value:"Configure",id:"configure-1",level:3},{value:"Configure audit data sources",id:"configure-audit-data-sources",level:3},{value:"Configure audit audit items",id:"configure-audit-audit-items",level:3},{value:"Dependencies",id:"dependencies-1",level:3},{value:"Start",id:"start-2",level:3}],d={toc:s},c="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"All deploying files at ",(0,i.kt)("inlineCode",{parentName:"p"},"inlong-audit")," directory, if you use MySQL to store audit data, you need to first create the database through ",(0,i.kt)("inlineCode",{parentName:"p"},"sql/apache_inlong_audit_mysql.sql"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# initialize database\nmysql -uDB_USER -pDB_PASSWD < sql/apache_inlong_audit_mysql.sql\n")),(0,i.kt)("p",null,"If you use StarRocks to store audit data, you need to first create the database through ",(0,i.kt)("inlineCode",{parentName:"p"},"sql/apache_inlong_audit_starrocks.sql"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# initialize database\nmysql -uDB_USER -pDB_PASSWD < sql/apache_inlong_audit_starrocks.sql\n")),(0,i.kt)("h2",{id:"audit-proxy"},"Audit Proxy"),(0,i.kt)("h3",{id:"configure-messagequeue"},"Configure MessageQueue"),(0,i.kt)("p",null,"You can choose Apache Pulsar, Apache Kafka or InLong TubeMQ as your MessageQueue service:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If using Pulsar, the configuration file is ",(0,i.kt)("inlineCode",{parentName:"li"},"conf/audit-proxy-pulsar.conf"),". Change the Pulsar Topic info.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"agent1.sinks.pulsar-sink-msg1.topic = persistent://public/default/inlong-audit\nagent1.sinks.pulsar-sink-msg2.topic = persistent://public/default/inlong-audit\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If using TubeMQ, the configuration file is ",(0,i.kt)("inlineCode",{parentName:"li"},"conf/audit-proxy-tube.conf"),". Change the TubeMQ Topic info.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"agent1.sinks.tube-sink-msg1.topic = inlong-audit\nagent1.sinks.tube-sink-msg2.topic = inlong-audit\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If using Kafka, the configuration file is ",(0,i.kt)("inlineCode",{parentName:"li"},"conf/audit-proxy-kafka.conf"),". Change the Kafka Topic info.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"agent1.sinks.kafka-sink-msg1.topic = inlong-audit\nagent1.sinks.kafka-sink-msg2.topic = inlong-audit\n")),(0,i.kt)("h3",{id:"start"},"Start"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"# By default, pulsar is used as the MessageQueue, and the audit-proxy-pulsar.conf configuration file is loaded.\nbash +x ./bin/proxy-start.sh [pulsar\uff5ctube\uff5ckafka]\n")),(0,i.kt)("p",null,"The default listen port is ",(0,i.kt)("inlineCode",{parentName:"p"},"10081"),"."),(0,i.kt)("h2",{id:"audit-store"},"Audit Store"),(0,i.kt)("h3",{id:"configure"},"Configure"),(0,i.kt)("p",null,"The configuration file is ",(0,i.kt)("inlineCode",{parentName:"p"},"conf/application.properties"),". "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"# proxy.type: pulsar / tube / kafka\naudit.config.proxy.type=pulsar\n\n# store.server: mysql / elasticsearch / clickhouse \naudit.config.store.mode=mysql\n\n# manger config\nmanager.hosts=127.0.0.1:8083\nproxy.cluster.tag=default_cluster\n\n# audit pulsar config (optional)\naudit.pulsar.topic=persistent://public/default/inlong-audit\naudit.pulsar.consumer.sub.name=sub-audit\n\n# audit tube config (optional)\naudit.tube.topic=inlong-audit\naudit.tube.consumer.group.name=inlong-audit-consumer\n\n# kafka config (optional)\naudit.kafka.topic=inlong-audit\naudit.kafka.consumer.name=inlong-audit-consumer\naudit.kafka.group.id=audit-consumer-group\n\n# mysql config\nspring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/apache_inlong_audit?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2b8&rewriteBatchedStatements=true&allowMultiQueries=true&zeroDateTimeBehavior=CONVERT_TO_NULL\nspring.datasource.druid.username=root\nspring.datasource.druid.password=inlong\n\n# es config (optional)\nelasticsearch.host=127.0.0.1\nelasticsearch.port=9200\n\n# clickhouse config (optional)\nclickhouse.driver=ru.yandex.clickhouse.ClickHouseDriver\nclickhouse.url=jdbc:clickhouse://127.0.0.1:8123/default\nclickhouse.username=default\nclickhouse.password=default\n\n# starrocks config (optional)\njdbc.driver=com.mysql.cj.jdbc.Driver\njdbc.url=jdbc:mysql://127.0.0.1:9020/apache_inlong_audit?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2b8&rewriteBatchedStatements=true&allowMultiQueries=true&zeroDateTimeBehavior=CONVERT_TO_NULL\njdbc.username=*******\njdbc.password=********\n")),(0,i.kt)("h3",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If the backend database is MySQL, please download ",(0,i.kt)("a",{parentName:"p",href:"https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar"},"mysql-connector-java-8.0.28.jar")," and put it into ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/")," directory.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If the backend database is PostgreSQL, there's no need for additional dependencies."))),(0,i.kt)("h3",{id:"start-1"},"Start"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"bash +x ./bin/store-start.sh\n")),(0,i.kt)("h2",{id:"audit-service"},"Audit Service"),(0,i.kt)("h3",{id:"configure-1"},"Configure"),(0,i.kt)("p",null,"The configuration file is ",(0,i.kt)("inlineCode",{parentName:"p"},"conf/audit-service.properties")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"mysql.jdbc.url=jdbc:mysql://127.0.0.1:3306/apache_inlong_audit?characterEncoding=utf8&useUnicode=true&rewriteBatchedStatements=true\nmysql.username=*****\nmysql.password=*****\n")),(0,i.kt)("h3",{id:"configure-audit-data-sources"},"Configure audit data sources"),(0,i.kt)("p",null,"In the audit_source_config table used by the Audit Service, configure the data source for audit storage."),(0,i.kt)("h3",{id:"configure-audit-audit-items"},"Configure audit audit items"),(0,i.kt)("p",null,"In the audit_id_config table used by the Audit Service, configure the audit items that need to be cached."),(0,i.kt)("h3",{id:"dependencies-1"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the backend database is MySQL, please download ",(0,i.kt)("a",{parentName:"li",href:"https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar"},"mysql-connector-java-8.0.28.jar")," and put it into ",(0,i.kt)("inlineCode",{parentName:"li"},"lib/")," directory."),(0,i.kt)("li",{parentName:"ul"},"If the backend database is PostgreSQL, there's no need for additional dependencies.")),(0,i.kt)("h3",{id:"start-2"},"Start"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Shell"},"bash +x ./bin/service-start.sh\n")))}p.isMDXComponent=!0}}]);