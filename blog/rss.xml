<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Apache InLong Blog</title>
        <link>https://inlong.apache.org/blog</link>
        <description>Apache InLong Blog</description>
        <lastBuildDate>Thu, 23 Mar 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Release 1.6.0]]></title>
            <link>https://inlong.apache.org/blog/2023/03/23/release-1.6.0</link>
            <guid>https://inlong.apache.org/blog/2023/03/23/release-1.6.0</guid>
            <pubDate>Thu, 23 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong recently released version 1.6.0, which closed about 202+ issues, including 11+ major features and 80+ optimizations. Mainly completed the addition of Kudu data stream, improvement of Redis data stream, the addition of MQ cache cluster selector strategy, optimization of Audit ID allocation rules, the addition of data node connection testing, optimization of Sort Audit reconciliation benchmark time, and expansion of Audit support for using Kafka to cache audit data.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong recently released version 1.6.0, which closed about 202+ issues, including 11+ major features and 80+ optimizations. Mainly completed the addition of Kudu data stream, improvement of Redis data stream, the addition of MQ cache cluster selector strategy, optimization of Audit ID allocation rules, the addition of data node connection testing, optimization of Sort Audit reconciliation benchmark time, and expansion of Audit support for using Kafka to cache audit data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="about-apache-inlong">About Apache InLong<a href="#about-apache-inlong" class="hash-link" aria-label="Direct link to About Apache InLong" title="Direct link to About Apache InLong">​</a></h2><p>As the industry's first one-stop open-source massive data integration framework, Apache InLong provides automatic, safe, reliable, and high-performance data transmission capabilities to facilitate businesses to build stream-based data analysis, modeling, and applications quickly. At present, InLong is widely used in various industries such as advertising, payment, social networking, games, artificial intelligence, etc., serving thousands of businesses, among which the scale of high-performance scene data exceeds 1 trillion lines per day, and the scale of high-reliability scene data exceeds 10 trillion lines per day.</p><p>The core keywords of InLong project positioning are "one-stop" and "massive data". For "one-stop", we hope to shield technical details, provide complete data integration and support services, and implement out-of-the-box; With its advantages, such as multi-cluster management, it can stably support larger-scale data volumes based on trillions lines per day.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="160-overview">1.6.0 Overview<a href="#160-overview" class="hash-link" aria-label="Direct link to 1.6.0 Overview" title="Direct link to 1.6.0 Overview">​</a></h2><p>Apache InLong recently released version 1.6.0, which closed about 202+ issues, including 11+ major features and 80+ optimizations. Mainly completed the addition of Kudu data stream, improvement of Redis data stream, the addition of MQ cache cluster selector strategy, optimization of Audit ID allocation rules, the addition of data node connection testing, optimization of Sort Audit reconciliation benchmark time, and expansion of Audit support for using Kafka to cache audit data, mainly including the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="agent-module">Agent Module<a href="#agent-module" class="hash-link" aria-label="Direct link to Agent Module" title="Direct link to Agent Module">​</a></h3><ul><li>Improved the file collection stability and fixed multiple collection bugs</li><li>Fixed multiple bugs such as MQTT, MongoDB</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dataproxy-module">DataProxy Module<a href="#dataproxy-module" class="hash-link" aria-label="Direct link to DataProxy Module" title="Direct link to DataProxy Module">​</a></h3><ul><li>Added MQ cluster Selector strategy to reduce the number of producers</li><li>Added Audit report for the new MQ Sink</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-module">Manager Module<a href="#manager-module" class="hash-link" aria-label="Direct link to Manager Module" title="Direct link to Manager Module">​</a></h3><ul><li>Optimized the Audit ID distribution rules and supported multiple Load Data Node audit</li><li>Optimized Clickhouse data node metadata configuration and management</li><li>Added connection test for new Data Node, check the availability of nodes</li><li>Added Pulsar Multi-Cluster Topic and Subscription Management</li><li>Fixed multiple data stream management and status management bugs</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-module">Sort Module<a href="#sort-module" class="hash-link" aria-label="Direct link to Sort Module" title="Direct link to Sort Module">​</a></h3><ul><li>Added data Audit for Kafka Source connector</li><li>Added new CSV format and dirty data archive for Doris connector</li><li>Supported Array, Map, Struct, and other complex types</li><li>Optimized Pulsar Connector to solve the issue of data loss</li><li>Fixed the writing in chaos for Canal-JSON metadata fields</li><li>Optimized reconciliation benchmark time for Sort Audit</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard-module">Dashboard Module<a href="#dashboard-module" class="hash-link" aria-label="Direct link to Dashboard Module" title="Direct link to Dashboard Module">​</a></h3><ul><li>Continue to optimize the Dashboard experience and reduce the threshold for first users</li><li>Added node management for Redis, Kudu, and other data nodes</li><li>Optimized data node parameters such as PostgreSQL, Kafka, Redis, etc.</li><li>Simplified the Agent node IP selection strategy</li><li>Added connection test pages for data nodes</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other">Other<a href="#other" class="hash-link" aria-label="Direct link to Other" title="Direct link to Other">​</a></h3><ul><li>Supported using Kafka as cache MQ for Audit</li><li>Audit uniformly obtains the MQ cluster from Manager</li><li>Optimized deployment steps such as Standalone, Docker-Compose, Kubernetes, and other deployment steps</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="160-feature-introduction">1.6.0 Feature Introduction<a href="#160-feature-introduction" class="hash-link" aria-label="Direct link to 1.6.0 Feature Introduction" title="Direct link to 1.6.0 Feature Introduction">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supported-kudu-data-stream">Supported Kudu data stream<a href="#supported-kudu-data-stream" class="hash-link" aria-label="Direct link to Supported Kudu data stream" title="Direct link to Supported Kudu data stream">​</a></h3><p>Apache Kudu is an open-source storage engine by Cloudera, which can provide low-delayed random read and write and efficient data analysis capabilities simultaneously. In version 1.6.0, InLong supports the Kudu data stream, including adding Kudu Connector, metadata management, metrics, etc. Kudu data stream contributed by @featzhang independently. Interested users can make an installation and experience.
<img loading="lazy" alt="1.6.0-create-kudu" src="/assets/images/1.6.0-create-kudu-cb72fe296daffb2196841d6ca42e8146.png" width="1488" height="1063" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improved-the-redis-data-stream">Improved the Redis data stream<a href="#improved-the-redis-data-stream" class="hash-link" aria-label="Direct link to Improved the Redis data stream" title="Direct link to Improved the Redis data stream">​</a></h3><p>Redis is a viral open-source memory database with high performance and rich data structure. In version 1.6.0, InLong perfects the Redis data stream, adding SinkFunction, metadata management, indicators, and Dashboard pages in Redis Connector. Supported data formats like Redis's PLAIN, Hash, and Bitmap and realized Redis Schema conversion through the SCHEMAMAPPING mechanism. Redis data streams through the SCHEMA mapping mode, and SCHEMA can be converted into different <!-- -->[Redis Data-Type]<!-- --> (<a href="https://redis.io/docs/data-types/tutorial/" target="_blank" rel="noopener noreferrer">https://redis.io/docs/data-types/tutorial/</a>). Redis data stream is mainly contributed to and fulfilled by @featzhang independently. For details, please refer to <!-- -->[INLONG-7060]<!-- --> (<a href="https://github.com/apache/inlong/issues/7060" target="_blank" rel="noopener noreferrer">https://github.com/apache/inlong/issues/7060</a>).
<img loading="lazy" alt="1.6.0-update-redis" src="/assets/images/1.6.0-update-redis-017cd2d29c513ca867bfef88f9bf8ea6.png" width="755" height="792" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-mq-cluster-selector-strategy">Added MQ cluster Selector strategy<a href="#added-mq-cluster-selector-strategy" class="hash-link" aria-label="Direct link to Added MQ cluster Selector strategy" title="Direct link to Added MQ cluster Selector strategy">​</a></h3><p>In the multi-MQ cluster scene, if DataProxy is connected to all MQ clusters simultaneously, the number of producers in the MQ cluster will surge. At the same time, the amount of metadata of ZooKeeeper is excess, which will cause OutOfMemory. In version 1.6.0, InLong increased the selector strategy of the MQ cache cluster level (mainly for Apache Pulsar). As a result, the DataProxy node can only choose some MQ clusters under the same tag for production, thereby reducing the number of producer connections and Zookeeper metadata. @Luchunliang mainly develops this feature. For details, please refer to <!-- -->[INLONG-7231]<!-- --> (<a href="https://github.com/apache/inlong/pull/7236" target="_blank" rel="noopener noreferrer">https://github.com/apache/inlong/pull/7236</a>).
<img loading="lazy" alt="1.6.0-mq-selector" src="/assets/images/1.6.0-mq-selector-80659d1793454422d4f75feaa31eaed7.png" width="1468" height="447" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimized-the-audit-id-distribution-rules">Optimized the Audit ID distribution rules<a href="#optimized-the-audit-id-distribution-rules" class="hash-link" aria-label="Direct link to Optimized the Audit ID distribution rules" title="Direct link to Optimized the Audit ID distribution rules">​</a></h3><p>In the original design of InLong Audit, the receiving and sending number of each module is an independent audit ID, which is used to record the receiving and sending number for each module. There is a defect in this scheme. If InLong Sort sorted data to multiple targets at the same time (such as writing Hive and Clickhouse), the audit ID cannot distinguish different data streams for the Sort. In version 1.6.0, the Audit ID distribution rules are optimized, the different data stream has a different audit ID, achieving data audit of multiple sorting targets for the same data stream. This feature also involves changes in Manager and Sort module. It is developed and implemented by @FuWeng11 and @EMSNAP. For details, please refer to <!-- -->[INLONG-7389]<!-- --> (<a href="https://github.com/apache/inlong/pull/7390" target="_blank" rel="noopener noreferrer">https://github.com/apache/inlong/pull/7390</a>), <!-- -->[INLONG-7232]<!-- --> (<a href="https://github.com/apache/inlong/pull/7233" target="_blank" rel="noopener noreferrer">https://github.com/apache/inlong/pull/7233</a>), and <!-- -->[INLONG-7503]<!-- --> (<a href="https://github.com/apache/inlong/pull/7552" target="_blank" rel="noopener noreferrer">https://github.com/apache/inlong/pull/7552</a>).</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_hive_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'HIVE'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'7'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_hive_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'HIVE'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'8'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_clickhouse_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'CLICKHOUSE'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'9'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_clickhouse_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'CLICKHOUSE'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'10'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_es_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ELASTICSEARCH'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'11'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_es_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ELASTICSEARCH'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'12'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_starrocks_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'STARROCKS'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'13'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_starrocks_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'STARROCKS'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'14'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_hudi_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'HUDI'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'15'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_hudi_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'HUDI'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'16'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_iceberg_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ICEBERG'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'17'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_iceberg_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ICEBERG'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'18'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_hbase_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'HBASE'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'19'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_hbase_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'HBASE'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'20'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_doris_input'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'DORIS'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'21'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'audit_sort_doris_output'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'DORIS'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'22'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="added-connection-test-for-new-data-node">Added connection test for new Data Node<a href="#added-connection-test-for-new-data-node" class="hash-link" aria-label="Direct link to Added connection test for new Data Node" title="Direct link to Added connection test for new Data Node">​</a></h3><p>In the previous version, InLong added data nodes and registered MQ clusters, and did not judge the availability of the cluster. In the new version, InLong adds a connection test for the main data node and InLong system component registration, which enhances the data stream creation. This feature is mainly participated in development by @leosanqing, @Bluewang, and @Fuweng11.
<img loading="lazy" alt="1.6.0-connection-test" src="/assets/images/1.6.0-connection-test-ef3deff138b5d316c137aa4e027550a9.png" width="889" height="794" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimized-reconciliation-benchmark-time-for-sort-audit">Optimized reconciliation benchmark time for Sort Audit<a href="#optimized-reconciliation-benchmark-time-for-sort-audit" class="hash-link" aria-label="Direct link to Optimized reconciliation benchmark time for Sort Audit" title="Direct link to Optimized reconciliation benchmark time for Sort Audit">​</a></h3><p>Before version 1.6.0, the Sort reconciliation benchmark time is the machine time for data processing. Using this time will cause the full-link reconciliation data to be inaccurate. In this version, the Sort audit reconciliation referred to the design of TimestampedCollector in Apache Flink, replaced the Simple Collector in the original Pulsar Connector, and aligned the audit index. The implementation principle is to set the Timestamp field at the Collector. When obtaining the InLongMsg data transmitted by DataProxy, the reset data time is used as the Audit time record metric when sending the message downstream. The optimized Sort audit index can be aligned with other modules, such as DataProxy, this feature was mainly developed by @Emsnap.
<img loading="lazy" alt="1.6.0-sort-audit-time" src="/assets/images/1.6.0-sort-audit-time-357db69618d9a1ff04731d1effd0ecfb.png" width="1904" height="947" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supported-using-kafka-as-cache-mq-for-audit">Supported using Kafka as cache MQ for Audit<a href="#supported-using-kafka-as-cache-mq-for-audit" class="hash-link" aria-label="Direct link to Supported using Kafka as cache MQ for Audit" title="Direct link to Supported using Kafka as cache MQ for Audit">​</a></h3><p>InLong Audit is an independent subsystem that conducts real-time audit reconciliation of the InLong system's Agent, DataProxy, and Sort module's inflow, and outflow. The current amount of audits is minute, hour, and day. In the previous version, InLong Audit only supports the use of Pulsar to cache audit data, and this will increase the cost of user deployment when they chose Kafka. In the entire InLong Audit design, the choice of MQ type should be consistent with the data stream to avoid different use of different use MQ types. In version 1.6.0, in order to achieve the use of the same type of MQ service in Audit modules and data stream, Audit supports the use of Kafka cache audit data to achieve the unity of MQ service selection. This feature is mainly completed by @haifxu and @dockerzhang.
<img loading="lazy" alt="1.6.0-audit-kafka" src="/assets/images/1.6.0-audit-kafka-120f70dcf6449309dd9824c5e4d7faa1.png" width="843" height="732" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="follow-up-planning">Follow-up planning<a href="#follow-up-planning" class="hash-link" aria-label="Direct link to Follow-up planning" title="Direct link to Follow-up planning">​</a></h2><p>In 1.6.0, the Sort module also fixes multiple bugs such as dirty data archives, metrics, and Connectors. The Dashboard continues to optimize display and approval processes and other experience problems. For more details, please refer to the Release <!-- -->[Changelog]<!-- --> (https: // github. com/Apache/InLong/Blob/Master/Changes.md). In the subsequent version, Apache InLong will add Schema dynamic change, Schema batch import, agent installation, adding more data nodes, looking forward to more developers participating in contributions.</p>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Release 1.5.0]]></title>
            <link>https://inlong.apache.org/blog/2023/01/13/release-1.5.0</link>
            <guid>https://inlong.apache.org/blog/2023/01/13/release-1.5.0</guid>
            <pubDate>Fri, 13 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong recently released version 1.5.0, which closed about 296+ issues, including 12+ major features and 110+ optimizations. Mainly completed the addition of StarRocks, Hudi, Doris, Elasticsearch, and other sinks, optimization of the Dashboard experience, refactor the MQ management model, support dirty data processing, full-link Apache Kafka support, and TubeMQ C++/Python SDK support for production, etc.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong recently released version 1.5.0, which closed about 296+ issues, including 12+ major features and 110+ optimizations. Mainly completed the addition of StarRocks, Hudi, Doris, Elasticsearch, and other sinks, optimization of the Dashboard experience, refactor the MQ management model, support dirty data processing, full-link Apache Kafka support, and TubeMQ C++/Python SDK support for production, etc.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="about-apache-inlong">About Apache InLong<a href="#about-apache-inlong" class="hash-link" aria-label="Direct link to About Apache InLong" title="Direct link to About Apache InLong">​</a></h2><p>As the industry's first one-stop open-source massive data integration framework, Apache InLong provides automatic, safe, reliable, and high-performance data transmission capabilities to facilitate businesses to build stream-based data analysis, modeling, and applications quickly. At present, InLong is widely used in various industries such as advertising, payment, social networking, games, artificial intelligence, etc., serving thousands of businesses, among which the scale of high-performance scene data exceeds 1 trillion/day, and the scale of high-reliability scene data exceeds 10 trillion/day sky.</p><p>The core keywords of InLong project positioning are "one-stop" and actual "massive data". For "one-stop", we hope to shield technical details, provide complete data integration and support services, and realize out-of-the-box; With its advantages, such as multi-cluster management, it can stably support larger-scale data volumes on the basis of trillions/day.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="150-overview">1.5.0 Overview<a href="#150-overview" class="hash-link" aria-label="Direct link to 1.5.0 Overview" title="Direct link to 1.5.0 Overview">​</a></h2><p>Apache InLong recently released version 1.5.0, which closed about 296+ issues, including 12+ major features and 110+ optimizations. Mainly completed the addition of StarRocks, Hudi, Doris, Elasticsearch, and other data stream sinks, optimization of the Dashboard experience, reconstruction of the MQ management model, addition of dirty data processing, full-link Apache Kafka support, and TubeMQ C++/Python SDK support for production, etc. This version has also completed a large number of other features, mainly including the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="agent-module">Agent Module<a href="#agent-module" class="hash-link" aria-label="Direct link to Agent Module" title="Direct link to Agent Module">​</a></h3><ul><li>Support log collection in CVM scenarios</li><li>Added direct sending Pulsar, sending DataProxy synchronous and asynchronous strategies</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dataproxy-module">DataProxy Module<a href="#dataproxy-module" class="hash-link" aria-label="Direct link to DataProxy Module" title="Direct link to DataProxy Module">​</a></h3><ul><li>Refactor the MQ management model to support the rapid expansion of new MQ types</li><li>Optimized caching layer to support Apache Kafka message queue</li><li>Added support for BufferQueueChannel</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tubemq-module">TubeMQ Module<a href="#tubemq-module" class="hash-link" aria-label="Direct link to TubeMQ Module" title="Direct link to TubeMQ Module">​</a></h3><ul><li>Increase data sending and receiving delay statistics</li><li>TubeMQ C++ SDK supports the produce</li><li>TubeMQ Python SDK supports the produce</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-module">Manager Module<a href="#manager-module" class="hash-link" aria-label="Direct link to Manager Module" title="Direct link to Manager Module">​</a></h3><ul><li>Added Hudi data node and data stream management</li><li>Added StarRocks data node and data stream management</li><li>Optimize Elasticsearch data node and data stream management</li><li>Added data conversion management in Manager Client</li><li>Optimize Apache Kafka message queue management</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-module">Sort Module<a href="#sort-module" class="hash-link" aria-label="Direct link to Sort Module" title="Direct link to Sort Module">​</a></h3><ul><li>The MySQL Load node inventory phase supports concurrent reading of tables without primary keys</li><li>Added StarRocks, Hudi, Doris, Elasticsearch 5.x data flow support</li><li>Add dirty data processing for Doris, PostgreSQL, Hive, HBase, Elasticsearch, etc.</li><li>Upgraded Iceberg to version 1.1.0</li><li>StarRocks, PostgreSQL, Doris, Hudi and other flows support table-level indicators</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard-module">Dashboard Module<a href="#dashboard-module" class="hash-link" aria-label="Direct link to Dashboard Module" title="Direct link to Dashboard Module">​</a></h3><ul><li>Experience optimization with more than 50 optimization points</li><li>Add JSON, Key-Value, and AVRO formats</li><li>Support ClickHouse, Iceberg, Elasticsearch, MySQL, and other data node management pages</li><li>Added SQLServer, Oracle, MongoDB, and MQTT data source pages</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other">Other<a href="#other" class="hash-link" aria-label="Direct link to Other" title="Direct link to Other">​</a></h3><ul><li>Add Spotless code formatting plugin and response pipeline</li><li>Docker-compose comes with Apache Flink environment</li><li>Added Grafana indicator display templates for Agent and DataProxy</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="150-feature-introduction">1.5.0 Feature Introduction<a href="#150-feature-introduction" class="hash-link" aria-label="Direct link to 1.5.0 Feature Introduction" title="Direct link to 1.5.0 Feature Introduction">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-starrocks-hudi-doris-elasticsearch-sinks">Support StarRocks, Hudi, Doris, Elasticsearch Sinks<a href="#support-starrocks-hudi-doris-elasticsearch-sinks" class="hash-link" aria-label="Direct link to Support StarRocks, Hudi, Doris, Elasticsearch Sinks" title="Direct link to Support StarRocks, Hudi, Doris, Elasticsearch Sinks">​</a></h3><p>In version 1.5.0, InLong expanded the new data node Connector, supported StarRocks, Hudi, Doris, Elasticsearch, and other flow directions for community user scenarios, and expanded the data warehouse and lake scenarios. These new data nodes are mainly contributed by @liaorui, @featzhang, @kuansix, @LvJiancheng, and other developers.
<img loading="lazy" alt="1.5.0-create-hudi-source" src="/assets/images/1.5.0-create-hudi-source-d1860467d7a91d8c068aab055f4028c5.png" width="1332" height="1228" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimization-of-the-dashboard-experience">Optimization of the Dashboard Experience<a href="#optimization-of-the-dashboard-experience" class="hash-link" aria-label="Direct link to Optimization of the Dashboard Experience" title="Direct link to Optimization of the Dashboard Experience">​</a></h3><p>Compared with traditional data integration projects, InLong has added concepts such as Group, Stream, and data nodes. Community users using Dashboard for the first time will be confused about the whole process. To reduce the cost of using Dashboard users, InLong has made a lot of optimizations for the Dashboard front-end page, with more than 50 optimization points, and adjusted the concept, process, and display. The figure below shows the process of creating a Stream in 1.5.0, which is more simplified than the previous version. Special thanks to @leezng, @bluewang, @kinfuy for optimizing the Dashboard and @Charles Zhang for the modification suggestions.
<img loading="lazy" alt="1.5.0-create-dashboard-stream" src="/assets/images/1.5.0-create-dashboard-stream-9a3f955dc1e9854da4f2d81442587665.png" width="1955" height="553" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="refactor-the-mq-management-model">Refactor the MQ Management Model<a href="#refactor-the-mq-management-model" class="hash-link" aria-label="Direct link to Refactor the MQ Management Model" title="Direct link to Refactor the MQ Management Model">​</a></h3><p>To quickly support new message queue services (such as RocketMQ) to implement plug-ins, and unify the existing support for Pulsar, Kafka, and TubeMQ, in version 1.5.0, InLong DataProxy refactored the MQ management model, and all MQ types are based on <code>MessageQueueHandler </code> Implement the corresponding <code>Handler</code>. Thanks to @woofyzhao and @luchunliang for the implementation of this feature. If you need to develop a new MQ type, you can refer to the DataProxy plug-in guide.
<img loading="lazy" alt="1.5.0-mq-handler" src="/assets/images/1.5.0-mq-handler-de6522ff228c5a35d74e661da04dee25.png" width="959" height="511" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-dirty-data-processing">Support Dirty Data Processing<a href="#support-dirty-data-processing" class="hash-link" aria-label="Direct link to Support Dirty Data Processing" title="Direct link to Support Dirty Data Processing">​</a></h3><p>If there is dirty data that does not meet the data specifications (such as field range exceeding, missing data fields, etc.) when entering the lake into the warehouse, it may cause the user task to fail to write and restart continuously. In version 1.5.0, InLong supports storing unrecoverable dirty data in external storage, including S3 and local logs. At the same time, users can customize the output port of dirty data and can configure "whether to enable dirty data archiving" and "whether to ignore write entry error", as follows to design a UML diagram for dirty data archiving. The realization of this feature is thanks to the support of @yunqingmoswu and @Yizhou-Yang.
<img loading="lazy" alt="1.5.0-dirty-data" src="/assets/images/1.5.0-dirty-data-f0d44e031631c4128e14293d7fa0ec01.png" width="1500" height="577" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-apache-kafka-full-link">Support Apache Kafka Full-link<a href="#support-apache-kafka-full-link" class="hash-link" aria-label="Direct link to Support Apache Kafka Full-link" title="Direct link to Support Apache Kafka Full-link">​</a></h3><p>In version 1.5.0, the DataProxy, Manager, Sort, and Dashboard modules have completed the full-link support for Apache Kafka. The support for Kafka has gone through two versions, and it is available for production in 1.5.0. When users create data streams Just choose Kafka. The implementation of this feature is thanks to @woofyzhao, @fuweng11, @haifxu for their support.
<img loading="lazy" alt="1.5.0-support-kafka" src="/assets/images/1.5.0-support-kafka-3b9ddf99ca3d5779906e72865fdfe18a.png" width="1869" height="573" class="img_ev3q"></p><p>For more details on the 1.5.0 release, please refer to the release notes, which detail the features, enhancements, and bug fixes for this release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="follow-up-planning">Follow-up planning<a href="#follow-up-planning" class="hash-link" aria-label="Direct link to Follow-up planning" title="Direct link to Follow-up planning">​</a></h2><p>In the following versions, Apache InLong will add multi-tenant management, standardize data flow, resources, and permissions of projects, clusters, and users, and optimize the performance and stability of various data sources, Agent management, etc., expect more developers to participate and contribute.</p>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Release 1.4.0]]></title>
            <link>https://inlong.apache.org/blog/2022/11/16/release-1.4.0</link>
            <guid>https://inlong.apache.org/blog/2022/11/16/release-1.4.0</guid>
            <pubDate>Wed, 16 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.
InLong offers great power to build data analysis, modeling and other real-time applications based on streaming data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="140-version-overview">1.4.0 version overview<a href="#140-version-overview" class="hash-link" aria-label="Direct link to 1.4.0 version overview" title="Direct link to 1.4.0 version overview">​</a></h2><p>Apache InLong recently released version 1.4.0, which closed about 364+ issues with 16+ features and 120+ optimizations. It mainly completes the real-time synchronization of the entire database to Apache Doris and the real-time synchronization of the entire database to Apache Iceberg, the standard architecture supports HTTP reporting, and the standard architecture adds MongoDB and other collection nodes. This release also completes a number of other features, including:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="agent-module">Agent Module<a href="#agent-module" class="hash-link" aria-label="Direct link to Agent Module" title="Direct link to Agent Module">​</a></h3><ul><li>Refactored sink-sending metrics</li><li>Audit report increases data size</li><li>Support Redis, MQTT, SQLServer, Oracle, and MongoDB data sources</li><li>Enhanced Kubernetes environment file collection capability</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dataproxy-module">DataProxy module<a href="#dataproxy-module" class="hash-link" aria-label="Direct link to DataProxy module" title="Direct link to DataProxy module">​</a></h3><ul><li>Heartbeat reporting adds service status and supports authentication</li><li>Added proxy-send mode to send data</li><li>Optimized data link buried point indicators</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tubemq-module">TubeMQ module<a href="#tubemq-module" class="hash-link" aria-label="Direct link to TubeMQ module" title="Direct link to TubeMQ module">​</a></h3><ul><li>Added client load balancing consumer group control API</li><li>C++ SDK fixes multiple bugs</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-module">Manager module<a href="#manager-module" class="hash-link" aria-label="Direct link to Manager module" title="Direct link to Manager module">​</a></h3><ul><li>Data stream Group and Stream support extended parameters</li><li>Client supports updating and deleting data flow through Key</li><li>Refactored the way to obtain Sort cluster configuration information</li><li>Optimized state management</li><li>Client supports cluster addition, deletion, modification, and query</li><li>Cluster nodes report new protocol types</li><li>Cache layer usage supports using Kafka</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-module">Sort module<a href="#sort-module" class="hash-link" aria-label="Direct link to Sort module" title="Direct link to Sort module">​</a></h3><ul><li>Support debezium-json format</li><li>Kafka data nodes support topic dynamic awareness</li><li>Connectors such as Hive/Hbase/Iceberg support indicator status recovery</li><li>Elasticsearch 6/7, JDBC connector added indicator status</li><li>Iceberg sink supports schema revolution, can automatically build tables, and perceive the increase of fields</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard-module">Dashboard module<a href="#dashboard-module" class="hash-link" aria-label="Direct link to Dashboard module" title="Direct link to Dashboard module">​</a></h3><ul><li>Unified data source, data flow type definition</li><li>Added Agent type for cluster management</li><li>Add data node management</li><li>Support selection of Kafka message type</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other">Other<a href="#other" class="hash-link" aria-label="Direct link to Other" title="Direct link to Other">​</a></h3><ul><li>docker-compose deploys the built-in Flink environment</li><li>Fix multiple aarch64 mirror bugs</li><li>Fix multiple dependency security bugs</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="140-version-feature-introduction">1.4.0 version feature introduction<a href="#140-version-feature-introduction" class="hash-link" aria-label="Direct link to 1.4.0 version feature introduction" title="Direct link to 1.4.0 version feature introduction">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="agent-adds-a-variety-of-data-sources">Agent adds a variety of data sources<a href="#agent-adds-a-variety-of-data-sources" class="hash-link" aria-label="Direct link to Agent adds a variety of data sources" title="Direct link to Agent adds a variety of data sources">​</a></h3><p>In version 1.4.0, Agent supports data sources such as Redis, MQTT, SQLServer, Oracle, MongoDB, etc., so that the collection capabilities of standard architecture and lightweight architecture are basically aligned and users have more choices in massive scenarios. The support of this part of the back-end capabilities is mainly completed by @iamsee123 and @haibo-duan, and the front-end part is completed by @bluewang.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="improve-component-metrics">Improve component metrics<a href="#improve-component-metrics" class="hash-link" aria-label="Direct link to Improve component metrics" title="Direct link to Improve component metrics">​</a></h3><p>In version 1.4.0, the Agent, DataProxy, and Sort modules all have indicators optimized and improved, including the reconstruction of the indicators sent by the Agent, increasing the dimension of the data Group/Stream indicators, and fixing the inaccuracy of the Prometheus Listener indicators. Thanks to @Keylchen, @pocozh, and others for their contributions.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimize-docker-compose-deployment">Optimize Docker-compose deployment<a href="#optimize-docker-compose-deployment" class="hash-link" aria-label="Direct link to Optimize Docker-compose deployment" title="Direct link to Optimize Docker-compose deployment">​</a></h3><p>There are many InLong service components, and there has always been a problem with high deployment thresholds. In version 1.4.0, the compatibility of docker-compose deployment is optimized, and an Apache Flink environment is built-in to help developers quickly start creating tasks. Thanks to @dockerzhang for optimizing this part.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimize-heartbeat-management">Optimize heartbeat management<a href="#optimize-heartbeat-management" class="hash-link" aria-label="Direct link to Optimize heartbeat management" title="Direct link to Optimize heartbeat management">​</a></h3><p>In version 1.4.0, a lot of optimizations have been made for the heartbeat of service components, including adding data protocol when reporting, automatic registration of Agent/DataProxy component reporting, adding heartbeat management API to Manager, and optimizing multiple heartbeat status bugs. Thanks to @gosonzhang, @GanfengTan, @pocozh, @lucaspeng12138 and @haifxu for their contributions.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-real-time-synchronization-of-the-entire-database">Support real-time synchronization of the entire database<a href="#support-real-time-synchronization-of-the-entire-database" class="hash-link" aria-label="Direct link to Support real-time synchronization of the entire database" title="Direct link to Support real-time synchronization of the entire database">​</a></h3><p>In version 1.4.0, InLong began to support real-time synchronization of the entire database to follow up on the needs of community users. Currently, it is the first to achieve real-time synchronization of the entire database to Doris and real-time synchronization of the entire database to Iceberg/Kafka/Doris. In the near future, the community will also realize the synchronization of the entire database. Share the details. Thanks to @thesumery, @EMsnap, @yunqingmoswu for their contributions.</p><p>For more details on the 1.4.0 release, please refer to the release notes, which detail the features, enhancements, and bug fixes for this release.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="follow-up-planning">Follow-up planning<a href="#follow-up-planning" class="hash-link" aria-label="Direct link to Follow-up planning" title="Direct link to Follow-up planning">​</a></h3><p>In the next version, the community will continue to add synchronization scenarios for the entire database, improve task indicators, increase system stability, and conduct stress tests on standard architectures and lightweight architectures.</p>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Release 1.3.0]]></title>
            <link>https://inlong.apache.org/blog/2022/09/05/release-1.3.0</link>
            <guid>https://inlong.apache.org/blog/2022/09/05/release-1.3.0</guid>
            <pubDate>Mon, 05 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.
InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="130-features-overview">1.3.0 Features Overview<a href="#130-features-overview" class="hash-link" aria-label="Direct link to 1.3.0 Features Overview" title="Direct link to 1.3.0 Features Overview">​</a></h2><p><strong>The just-released 1.3.0 version closes about 410+ issues, contains 110+ features and 170+ optimizations.</strong>
Mainly include the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhance-management-and-control-capabilities">Enhance management and control capabilities<a href="#enhance-management-and-control-capabilities" class="hash-link" aria-label="Direct link to Enhance management and control capabilities" title="Direct link to Enhance management and control capabilities">​</a></h3><ul><li>Added permission authentication for Open Api</li><li>Added cluster heartbeat mechanism for Agent and DataProxy</li><li>Manager adapts to two roles such as user and approver</li><li>Abstract operations on Load nodes to support easy scaling of Load node resources</li><li>Supports creation of databases and tables for SQLServer, Oracle and MySQL</li><li>Enhanced functionality of the Manager client, including but not limited to user and data node management</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extended-collection-node">Extended collection node<a href="#extended-collection-node" class="hash-link" aria-label="Direct link to Extended collection node" title="Direct link to Extended collection node">​</a></h3><ul><li>Support for collecting data in TubeMq</li><li>Support for collecting data in Redis</li><li>Support for collecting data in Doris</li><li>Support to collect data in Pulsar without AdminUrl</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimize-write-node">Optimize write node<a href="#optimize-write-node" class="hash-link" aria-label="Direct link to Optimize write node" title="Direct link to Optimize write node">​</a></h3><ul><li>Kafka Sink supports All Changelog Mode</li><li>JDBC Sink supports All Changelog Mode</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-data-conversion">Support data conversion<a href="#support-data-conversion" class="hash-link" aria-label="Direct link to Support data conversion" title="Direct link to Support data conversion">​</a></h3><ul><li>Support Union operator</li><li>Support encrypted Udf</li><li>Support Json Udf</li><li>Support Temporal Join</li><li>Support Lookup Join</li><li>Support Interval Join</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="strengthen-agent-function">Strengthen Agent function<a href="#strengthen-agent-function" class="hash-link" aria-label="Direct link to Strengthen Agent function" title="Direct link to Strengthen Agent function">​</a></h3><ul><li>Support regular expression custom line break: default "\n" line ending mark, custom regular matching line ending mark can realize multi-line merging and folding</li><li>Support K8s log collection and carry cluster information</li><li>Supports standard output, node log collection, and will carry container and cluster information for standard output</li><li>Support full and incremental collection of file content</li><li>Supports automatic heartbeat reporting and registration to Manager</li><li>Support custom IP and get IP automatically</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-optimizations">Other optimizations<a href="#other-optimizations" class="hash-link" aria-label="Direct link to Other optimizations" title="Direct link to Other optimizations">​</a></h3><ul><li>GitHub Action check, pipeline optimization</li><li>DataProxy improves monitoring capabilities such as auditing and indicator reporting</li><li>DataProxy adds c++ sdk data reporting capability</li><li>Sort Support metrics report and audit report </li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="130-features-details">1.3.0 Features Details<a href="#130-features-details" class="hash-link" aria-label="Direct link to 1.3.0 Features Details" title="Direct link to 1.3.0 Features Details">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="abstracting-load-node-operations">Abstracting Load node operations<a href="#abstracting-load-node-operations" class="hash-link" aria-label="Direct link to Abstracting Load node operations" title="Direct link to Abstracting Load node operations">​</a></h3><p>Manager abstracts Load nodes to support easy expansion of Load node resources and greatly reduce the development time of a Load node
This part of the feature was contributed by @ciscozhou</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="add-permission-authentication-for-manager-open-api">Add permission authentication for Manager Open Api<a href="#add-permission-authentication-for-manager-open-api" class="hash-link" aria-label="Direct link to Add permission authentication for Manager Open Api" title="Direct link to Add permission authentication for Manager Open Api">​</a></h3><p>In the old version, the Manager Open Api can be accessed anonymously, and in the new version, it is implemented using the Apache Shiro framework.
Login authentication method based on Basic Access Authentication, this part of the function was contributed by @woofyzhao</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-collection-of-file-data-and-k8s-logs">Enhanced collection of file data and k8s logs<a href="#enhanced-collection-of-file-data-and-k8s-logs" class="hash-link" aria-label="Direct link to Enhanced collection of file data and k8s logs" title="Direct link to Enhanced collection of file data and k8s logs">​</a></h3><p>Version 1.3.0 enhances the collection of file data and k8s data, in which file collection supports regular expression custom line breaks, so that multiple lines can be merged and folded
In addition, the new version of Agent supports full and incremental collection of file content. This part of the function was contributed by @ganfengtan</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dataproxy-adds-c-sdk-capability">DataProxy adds c++ sdk capability<a href="#dataproxy-adds-c-sdk-capability" class="hash-link" aria-label="Direct link to DataProxy adds c++ sdk capability" title="Direct link to DataProxy adds c++ sdk capability">​</a></h3><p>In addition to the current java client, DataProxy has added c++ client capabilities, which are provided by @pocozh</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supports-multiple-udf-and-join-operators">Supports multiple udf and join operators<a href="#supports-multiple-udf-and-join-operators" class="hash-link" aria-label="Direct link to Supports multiple udf and join operators" title="Direct link to Supports multiple udf and join operators">​</a></h3><p>The new version of Sort supports three kinds of Temporal Join\ Lookup Join \ Interval Join, this part of the function was contributed by @yunqingmoswu
Most community users mentioned the need for encryption and decryption and Json Udf, this part of the function was contributed by @Emsnap and @Emhui</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-connector-supports-indicator-reporting-function">Sort connector supports indicator reporting function<a href="#sort-connector-supports-indicator-reporting-function" class="hash-link" aria-label="Direct link to Sort connector supports indicator reporting function" title="Direct link to Sort connector supports indicator reporting function">​</a></h3><p>The new version of Sort Connector supports Flink built-in indicator reporting of various Connectors. External indicator systems such as Prometheus can directly obtain the number and rate of task data read and write.
In addition, the new version also supports InLong Audit Audit data reporting, which is contributed by @pacigong, @Emsnap, @thesumery @Oneal65 @yunqingmoswu</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-supports-the-creation-of-resources-in-multiple-flow-directions">Manager supports the creation of resources in multiple flow directions<a href="#manager-supports-the-creation-of-resources-in-multiple-flow-directions" class="hash-link" aria-label="Direct link to Manager supports the creation of resources in multiple flow directions" title="Direct link to Manager supports the creation of resources in multiple flow directions">​</a></h3><p>In version 1.3.0, Manager added the creation of some storage resources:</p><ul><li>Create Topic for SQLServer</li><li>Create Oracle libraries and tables</li><li>Create MySQL namespaces and tables</li></ul><p>The above are all contributed by community member @haibo-duan, thanks</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-features-and-bug-fixes">Other features and bug fixes<a href="#other-features-and-bug-fixes" class="hash-link" aria-label="Direct link to Other features and bug fixes" title="Direct link to Other features and bug fixes">​</a></h3><p>For related content, please refer to the <a href="https://github.com/apache/inlong/blob/master/CHANGES.md" target="_blank" rel="noopener noreferrer">Release Notes</a>, which details the features, enhancements and bug fixes of this release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlong-follow-up-planning">Apache InLong follow-up planning<a href="#apache-inlong-follow-up-planning" class="hash-link" aria-label="Direct link to Apache InLong follow-up planning" title="Direct link to Apache InLong follow-up planning">​</a></h2><p>In subsequent versions, we will expand more data sources and storages to cover more usage scenarios, and gradually improve the usability and robustness of the system, including:</p><ul><li>Agent adds Redis, CloudEvents, MongoDB collection types</li><li>Unified DataProxy MQ framework</li><li>Full support for Apache Kafka</li></ul>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Release 1.2.0]]></title>
            <link>https://inlong.apache.org/blog/2022/06/22/release-1.2.0</link>
            <guid>https://inlong.apache.org/blog/2022/06/22/release-1.2.0</guid>
            <pubDate>Wed, 22 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities.
InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="120-features-overview">1.2.0 Features Overview<a href="#120-features-overview" class="hash-link" aria-label="Direct link to 1.2.0 Features Overview" title="Direct link to 1.2.0 Features Overview">​</a></h2><p><strong>The just-released 1.2.0-incubating version closes about 410+ issues, contains 30+ features and 190+ optimizations.</strong>
Mainly include the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhance-management-and-control-capabilities">Enhance management and control capabilities<a href="#enhance-management-and-control-capabilities" class="hash-link" aria-label="Direct link to Enhance management and control capabilities" title="Direct link to Enhance management and control capabilities">​</a></h3><ul><li>Dashboard and Manager add cluster management capabilities</li><li>Dashboard optimizes the flow creation process</li><li>Manager supports plug-in extension of MQ</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extended-collection-node">Extended collection node<a href="#extended-collection-node" class="hash-link" aria-label="Direct link to Extended collection node" title="Direct link to Extended collection node">​</a></h3><ul><li>Support for collecting data in Pulsar</li><li>Support data collection in MongoDB-CDC</li><li>Support data collection in MySQL-CDC</li><li>Support data collection in Oracle-CDC</li><li>Support data collection in PostgreSQL-CDC</li><li>Support data collection in SQLServer-CDC</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extended-write-node">Extended write node<a href="#extended-write-node" class="hash-link" aria-label="Direct link to Extended write node" title="Direct link to Extended write node">​</a></h3><ul><li>Support for writing data to Kafka</li><li>Support for writing data to HBase</li><li>Support for writing data to PostgreSQL</li><li>Support for writing data to Oracle</li><li>Supports writing data to MySQL</li><li>Support writing data to TDSQL-PostgreSQL</li><li>Support for writing data to Greenplum</li><li>Supports writing data to SQLServer</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-data-conversion">Support data conversion<a href="#support-data-conversion" class="hash-link" aria-label="Direct link to Support data conversion" title="Direct link to Support data conversion">​</a></h3><ul><li>Support String Split</li><li>Support String Regular Replace</li><li>Support String Regular Replace First Matched Value</li><li>Support Data Filter</li><li>Support Data Distinct</li><li>Support Regular Join</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-system-monitoring-function">Enhanced system monitoring function<a href="#enhanced-system-monitoring-function" class="hash-link" aria-label="Direct link to Enhanced system monitoring function" title="Direct link to Enhanced system monitoring function">​</a></h3><ul><li>Support the reporting and management of data link heartbeat</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-optimizations">Other optimizations<a href="#other-optimizations" class="hash-link" aria-label="Direct link to Other optimizations" title="Direct link to Other optimizations">​</a></h3><ul><li>Supports the delivery of DataProxy multi-cluster configurations</li><li>GitHub Action check, pipeline optimization</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="120-features-details">1.2.0 Features Details<a href="#120-features-details" class="hash-link" aria-label="Direct link to 1.2.0 Features Details" title="Direct link to 1.2.0 Features Details">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-multi-cluster-management">Support multi-cluster management<a href="#support-multi-cluster-management" class="hash-link" aria-label="Direct link to Support multi-cluster management" title="Direct link to Support multi-cluster management">​</a></h3><p>Manager adds cluster management function, supports multi-cluster configuration, and solves the limitation that only one set of clusters can be defined through configuration files.
Users can create different types of clusters on Dashboard as needed.</p><p>The multi-cluster feature is mainly designed and implemented by @healchow, @luchunliang, @leezng, thanks to three contributors.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-collection-of-file-data-and-mysql-binlog">Enhanced collection of file data and MySQL Binlog<a href="#enhanced-collection-of-file-data-and-mysql-binlog" class="hash-link" aria-label="Direct link to Enhanced collection of file data and MySQL Binlog" title="Direct link to Enhanced collection of file data and MySQL Binlog">​</a></h3><p>Version 1.2.0 supports collecting complete file data, and also supports collecting data from the specified Binlog location in MySQL. This part of the work was done by @Greedyu.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-whole-database-migration">Support whole database migration<a href="#support-whole-database-migration" class="hash-link" aria-label="Direct link to Support whole database migration" title="Direct link to Support whole database migration">​</a></h3><p>Sort supports migration of data across the entire database, contributed by @EMsnap.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supports-writing-data-in-canal-format">Supports writing data in Canal format<a href="#supports-writing-data-in-canal-format" class="hash-link" aria-label="Direct link to Supports writing data in Canal format" title="Direct link to Supports writing data in Canal format">​</a></h3><p>Support for writing data in Canal format to Kafka, contributed by @thexiay.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="optimize-the-http-request-method-in-manager-client">Optimize the HTTP request method in Manager Client<a href="#optimize-the-http-request-method-in-manager-client" class="hash-link" aria-label="Direct link to Optimize the HTTP request method in Manager Client" title="Direct link to Optimize the HTTP request method in Manager Client">​</a></h3><p>Optimized the way of executing HTTP requests in Manager Client, and added unit tests for Client, which reduces maintenance costs while reducing duplication of code.
This feature was contributed by new contributor @leosanqing.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="supports-running-sql-scripts">Supports running SQL scripts<a href="#supports-running-sql-scripts" class="hash-link" aria-label="Direct link to Supports running SQL scripts" title="Direct link to Supports running SQL scripts">​</a></h3><p>Sort supports running SQL scripts, see <a href="https://github.com/apache/inlong/issues/4405" target="_blank" rel="noopener noreferrer">INLONG-4405</a>, thanks to @gong for contributing this feature.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-the-reporting-and-management-of-data-link-heartbeat">Support the reporting and management of data link heartbeat<a href="#support-the-reporting-and-management-of-data-link-heartbeat" class="hash-link" aria-label="Direct link to Support the reporting and management of data link heartbeat" title="Direct link to Support the reporting and management of data link heartbeat">​</a></h3><p>This version supports the heartbeat reporting and management of data grouping, data flow and underlying components, which is the premise of the state management of each link of the subsequent system.</p><p>This feature was primarily designed and contributed by @baomingyu, @healchow and @kipshi.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-supports-the-creation-of-resources-in-multiple-flow-directions">Manager supports the creation of resources in multiple flow directions<a href="#manager-supports-the-creation-of-resources-in-multiple-flow-directions" class="hash-link" aria-label="Direct link to Manager supports the creation of resources in multiple flow directions" title="Direct link to Manager supports the creation of resources in multiple flow directions">​</a></h3><p>In version 1.2.0, Manager added the creation of some storage resources:</p><ul><li>Create Topic for Kafka (contributed by @woofyzhao)</li><li>Create databases and tables for Iceberg (contributed by @woofyzhao)</li><li>Create namespaces and tables for HBase (contributed by @woofyzhao)</li><li>Create databases and tables for ClickHouse (contributed by @lucaspeng12138)</li><li>Create indices for Elasticsearch (contributed by @lucaspeng12138)</li><li>Create databases and tables for PostgreSQL (contributed by @baomingyu)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-supports-lightweight-architecture">Sort supports lightweight architecture<a href="#sort-supports-lightweight-architecture" class="hash-link" aria-label="Direct link to Sort supports lightweight architecture" title="Direct link to Sort supports lightweight architecture">​</a></h3><p>Version 1.2.0 of Sort has done a lot of refactoring and improvements.
By introducing Flink-CDC, it supports a variety of Extract and Load nodes, and also supports data transformation (ie Transform).</p><p>This feature contains many sub-features. The main developers are:
@baomingyu, @EMsnap, @GanfengTan, @gong, @lucaspeng12138, @LvJiancheng, @kipshi, @thexiay, @woofyzhao, @yunqingmoswu, thank you all for your contributions.</p><p>For more information, please refer to: <a href="/blog/2022/06/16/inlong-sort-etl">Analysis of InLong Sort ETL Solution</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-features-and-bug-fixes">Other features and bug fixes<a href="#other-features-and-bug-fixes" class="hash-link" aria-label="Direct link to Other features and bug fixes" title="Direct link to Other features and bug fixes">​</a></h3><p>For related content, please refer to the <a href="https://github.com/apache/inlong/blob/master/CHANGES.md" target="_blank" rel="noopener noreferrer">Release Notes</a>, which details the features, enhancements and bug fixes of this release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlong-follow-up-planning">Apache InLong follow-up planning<a href="#apache-inlong-follow-up-planning" class="hash-link" aria-label="Direct link to Apache InLong follow-up planning" title="Direct link to Apache InLong follow-up planning">​</a></h2><p>In subsequent versions, we will expand more data sources and storages to cover more usage scenarios, and gradually improve the usability and robustness of the system, including:</p><ul><li>Heartbeat report of each component</li><li>Status management of data flow</li><li>Full link audit support for writing to ClickHouse</li><li>Expand more types of acquisition nodes and storage nodes</li></ul>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Analysis of InLong Sort ETL Solution]]></title>
            <link>https://inlong.apache.org/blog/2022/06/16/inlong-sort-etl</link>
            <guid>https://inlong.apache.org/blog/2022/06/16/inlong-sort-etl</guid>
            <pubDate>Thu, 16 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Background]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-background">1. Background<a href="#1-background" class="hash-link" aria-label="Direct link to 1. Background" title="Direct link to 1. Background">​</a></h2><p>With the increasing number of users and developers of Apache InLong(incubating), the demand for richer usage scenarios and low-cost operation is getting stronger and stronger. Among them, the demand for adding Transform (T) to the whole link of InLong has received the most feedback. After the research and design of @yunqingmoswu, @EMsnap, @gong, @thexiay community developers, the InLong Sort ETL solution based on Flink SQL has been completed. This article will introduce the implementation details of the solution in detail.</p><p>Firstly, based on Apache Flink SQL, there are mainly the following considerations：</p><ul><li>Flink SQL has high scalability and flexibility brought about by its powerful expression ability. Basically, Flink SQL can support most demand scenarios in the community. When the built-in functions of Flink SQL do not meet the requirements, we can also extend them through various UDFs.</li><li>Compared with the implementation of the underlying API of Flink, the development cost of Flink SQL is lower. Only for the first time, the conversion logic of Flink SQL needs to be implemented. In the future, we can focus on the construction of the ability of Flink SQL, such as the extension connector and the UDF.</li><li>In general, Flink SQL will be more robust and run more stable. The reason is that Flink SQL shields a lot of the underlying details of Flink, has strong community support, and has been practiced by a large number of users.</li><li>For users, Flink SQL is also easier to understand, especially for users who have used SQL, the usage is simple and familiar, which helps users to land quickly.</li><li>For the migration of existing real-time tasks, if they are originally SQL-type tasks, especially Flink SQL tasks, the migration cost is extremely low, and in some cases, no changes are even required.</li></ul><p><strong>Note</strong>: For all codes of this scheme, please refer to <a href="https://github.com/apache/incubator-inlong/tree/master/inlong-sort" target="_blank" rel="noopener noreferrer">Apache InLong Sort</a>, which can be downloaded and used in the upcoming version 1.2.0.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-introduction">2. Introduction<a href="#2-introduction" class="hash-link" aria-label="Direct link to 2. Introduction" title="Direct link to 2. Introduction">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="21-requirements">2.1 Requirements<a href="#21-requirements" class="hash-link" aria-label="Direct link to 2.1 Requirements" title="Direct link to 2.1 Requirements">​</a></h3><p>The main requirements of this solution are the completed inlong sort module transform (T) capability, including:</p><table><thead><tr><th align="center">Transform</th><th align="center">Notes</th></tr></thead><tbody><tr><td align="center">Deduplication in the window</td><td align="center">Deduplicate data within a time window</td></tr><tr><td align="center">time window aggregation</td><td align="center">Aggregate data within a time window</td></tr><tr><td align="center">time format conversion</td><td align="center">Converts the value of a field to a string in the target time format</td></tr><tr><td align="center">field segmentation</td><td align="center">Split a field into multiple new fields by a delimiter</td></tr><tr><td align="center">string replacement</td><td align="center">Replace some or all of the contents of a string field</td></tr><tr><td align="center">Data filtering</td><td align="center">Discard or retain data that meets the filter conditions</td></tr><tr><td align="center">Content extraction</td><td align="center">Extract part of a field to create a new field</td></tr><tr><td align="center">Join</td><td align="center">Support two table join</td></tr><tr><td align="center">Value substitution</td><td align="center">Given a matching value, if the field's value is equal to that value, replace it with the target value</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="22-usage-scenarios">2.2 Usage Scenarios<a href="#22-usage-scenarios" class="hash-link" aria-label="Direct link to 2.2 Usage Scenarios" title="Direct link to 2.2 Usage Scenarios">​</a></h3><p>Users of big data integration have transform requirements such as data transformation, connection and filtering in many business scenarios.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="23-design-goal">2.3 Design Goal<a href="#23-design-goal" class="hash-link" aria-label="Direct link to 2.3 Design Goal" title="Direct link to 2.3 Design Goal">​</a></h3><p>This design needs to achieve the following goals:</p><ul><li>Functionality: Under InLong Sort's existing architecture and data flow model, it covers basic Transform capabilities and has the ability to expand rapidly.</li><li>Compatibility: The new InLong Sort data model is forward compatible to ensure that historical tasks can be configured and run properly.</li><li>Maintainability: The conversion of the InLong Sort data model to Flink SQL only needs to be implemented once. When there are new functional requirements later, this part does not need to be changed, even if there are changes, it can be supported with a small amount of changes.</li><li>Extensibility: When the open source Flink Connector or the built-in Flink SQL function does not meet the requirements, you can customize the Flink Connector and UDF to achieve its function expansion.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="24-basic-concepts">2.4 Basic Concepts<a href="#24-basic-concepts" class="hash-link" aria-label="Direct link to 2.4 Basic Concepts" title="Direct link to 2.4 Basic Concepts">​</a></h3><p>The core concept refers to the explanation of terms in the outline design</p><table><thead><tr><th align="center">Name</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="center">InLong Dashboard</td><td align="center">Inlong front end management interface</td></tr><tr><td align="center">InLong Manager Client</td><td align="center">Wrap the interface in the manager for external user programs to call without going through the front-end inlong dashboard</td></tr><tr><td align="center">InLong Manager Openapi</td><td align="center">Inlong manager and external system call interface</td></tr><tr><td align="center">InLong Manager metaData</td><td align="center">Inlong manager metadata management, including metadata information of group and stream dimensions</td></tr><tr><td align="center">InLong Manager task manager</td><td align="center">Inlong manager manages the data source collection task module, manages agent task distribution, instruction distribution, and heartbeat reporting</td></tr><tr><td align="center">InLong Group</td><td align="center">Data flow group, including multiple data flows, one group represents one data access</td></tr><tr><td align="center">InLong Stream</td><td align="center">Data flow: a data flow has a specific flow direction</td></tr><tr><td align="center">Stream Source</td><td align="center">There are corresponding acquisition end and sink end in the stream. This design only involves the stream source</td></tr><tr><td align="center">Stream Info</td><td align="center">Abstract of data flow in sort, including various sources, transformations, destinations, etc. of the data flow</td></tr><tr><td align="center">Group Info</td><td align="center">Encapsulation of data flow in sort. A group info can contain multiple stream infos</td></tr><tr><td align="center">Node</td><td align="center">Abstraction of data source, data transformation and data destination in data synchronization</td></tr><tr><td align="center">Extract Node</td><td align="center">Source side abstraction of data synchronization</td></tr><tr><td align="center">Load Node</td><td align="center">Destination abstraction of data synchronization</td></tr><tr><td align="center">MySQL Extract Node</td><td align="center">MySQL data source abstraction</td></tr><tr><td align="center">Kafka Load Node</td><td align="center">Kafka data destination abstraction</td></tr><tr><td align="center">Transform Node</td><td align="center">Transformation process abstraction of data synchronization</td></tr><tr><td align="center">Aggregate Transform Node</td><td align="center">Data synchronization aggregation class transformation process abstraction</td></tr><tr><td align="center">Node Relation</td><td align="center">Relationship abstraction of nodes in data synchronization</td></tr><tr><td align="center">Field Relation</td><td align="center">Abstraction of the relationship between upstream and downstream node fields in data synchronization</td></tr><tr><td align="center">Function</td><td align="center">Abstraction of the relationship between upstream and downstream node fields in data synchronization</td></tr><tr><td align="center">Substring Function</td><td align="center">Abstraction of string interception function</td></tr><tr><td align="center">Filter Function</td><td align="center">Abstraction of data filter function</td></tr><tr><td align="center">Function Param</td><td align="center">Input parameter abstraction of function</td></tr><tr><td align="center">Constant Param</td><td align="center">Constant parameters</td></tr><tr><td align="center">Field Info</td><td align="center">Node field</td></tr><tr><td align="center">Meta FieldInfo</td><td align="center">Node meta information field</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="25-domain-model">2.5 Domain Model<a href="#25-domain-model" class="hash-link" aria-label="Direct link to 2.5 Domain Model" title="Direct link to 2.5 Domain Model">​</a></h3><p>This design mainly involves the following entities: </p><p>Group, Stream, GroupInfo, StreamInfo, Node, NodeRelation, FieldRelation, Function, FilterFunction, SubstringFunction, FunctionParam, FieldInfo, MetaFieldInfo, MySQLExtractNode, KafkaLoadNode, etc.</p><p>For ease of understanding, this section will model and analyze the relationship between entities. Description of entity correspondence of domain model:</p><ul><li>One group corresponds to one group info</li><li>A group contains one or more streams</li><li>One stream corresponds to one StreamInfo</li><li>A GroupInfo contains one or more StreamInfo</li><li>A StreamInfo contains multiple nodes</li><li>A StreamInfo contains one or more NodeRelations</li><li>A NodeRelation contains one or more FieldRelations</li><li>A NodeRelation contains 0 or more FilterFunctions</li><li>A FieldRelation contains one function or one FieldInfo as the source field and one FieldInfo as the target field</li><li>A function contains one or more FunctionParams</li></ul><p>The above relationship can be represented by UML object relationship diagram as:</p><p><img loading="lazy" alt="sort_UML" src="/assets/images/sort_UML-896d751427509d769add998680df9516.png" width="2576" height="869" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="26-function-use-case-diagram">2.6 Function Use-case Diagram<a href="#26-function-use-case-diagram" class="hash-link" aria-label="Direct link to 2.6 Function Use-case Diagram" title="Direct link to 2.6 Function Use-case Diagram">​</a></h3><p><img loading="lazy" alt="sort-usecase" src="/assets/images/sort-usecase-fb8639f9724899ab3afcbf35b8a21902.png" width="606" height="356" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-system-outline-design">3. System Outline Design<a href="#3-system-outline-design" class="hash-link" aria-label="Direct link to 3. System Outline Design" title="Direct link to 3. System Outline Design">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="31-system-architecture-diagram">3.1 System Architecture Diagram<a href="#31-system-architecture-diagram" class="hash-link" aria-label="Direct link to 3.1 System Architecture Diagram" title="Direct link to 3.1 System Architecture Diagram">​</a></h3><p><img loading="lazy" alt="architecture" src="/assets/images/architecture-b4c0fb3783a6ed2f2868f534df98e74b.png" width="461" height="741" class="img_ev3q"></p><ul><li>Serialization: Serialization Implementation Module</li><li>Deserialization: Deserialization Implementation Module</li><li>Flink Source: Custom Flink source implementation module</li><li>Flink Sink: Custom Flink sink implementation module</li><li>Transformation: Custom Transform implementation module</li><li>GroupInfo: Corresponding to Inlong group</li><li>StreamInfo: Corresponding to inlong stream</li><li>Node: Abstraction of data source, data conversion and data destination in data synchronization</li><li>FlinkSQLParser: SQL parser</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="32-inlong-sort-internal-operation-flow-chart">3.2 InLong Sort Internal Operation Flow Chart<a href="#32-inlong-sort-internal-operation-flow-chart" class="hash-link" aria-label="Direct link to 3.2 InLong Sort Internal Operation Flow Chart" title="Direct link to 3.2 InLong Sort Internal Operation Flow Chart">​</a></h3><p><img loading="lazy" alt="sort-operation-flow" src="/assets/images/sort-operation-flow-77363f12a68a011beba26db9ccc6fedb.png" width="771" height="61" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="33-module-design">3.3 Module Design<a href="#33-module-design" class="hash-link" aria-label="Direct link to 3.3 Module Design" title="Direct link to 3.3 Module Design">​</a></h3><p>This design only adds Flink connector and Flink SQL generator to the original system, and modifies the data model module.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="331-module-structure">3.3.1 Module Structure<a href="#331-module-structure" class="hash-link" aria-label="Direct link to 3.3.1 Module Structure" title="Direct link to 3.3.1 Module Structure">​</a></h4><p><img loading="lazy" alt="sort-module-structure" src="/assets/images/sort-module-structure-4dd424ae93043cb912dba69c08590b33.png" width="771" height="1011" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="332-module-division">3.3.2 Module Division<a href="#332-module-division" class="hash-link" aria-label="Direct link to 3.3.2 Module Division" title="Direct link to 3.3.2 Module Division">​</a></h4><p>Description of important module division:</p><table><thead><tr><th align="center">Name</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">FlinkSQLParser</td><td align="center">Used to generate Flink SQL core classes, including references to GroupInfo</td></tr><tr><td align="center">GroupInfo</td><td align="center">The internal abstraction of sort for inlong group is used to encapsulate the synchronization related information of the entire inlong group, including the reference to list\&lt;StreamInfo<!-- -->&gt;</td></tr><tr><td align="center">StreamInfo</td><td align="center">The internal abstraction of sort to inlong stream is used to encapsulate inlong stream synchronization related information, including references to list\&lt;node<!-- -->&gt;<!-- -->, list\&lt;NodeRelation<!-- -->&gt;</td></tr><tr><td align="center">Node</td><td align="center">The top-level interface of the synchronization node. Its subclass implementation is mainly used to encapsulate the data of the synchronization data source and the transformation node</td></tr><tr><td align="center">ExtractNode</td><td align="center">Data extract node abstraction, inherited from node</td></tr><tr><td align="center">LoadNode</td><td align="center">Data load node abstraction, inherited from node</td></tr><tr><td align="center">TransformNode</td><td align="center">Data transformation node abstraction, inherited from node</td></tr><tr><td align="center">NodeRelation</td><td align="center">Define relationships between nodes</td></tr><tr><td align="center">FieldRelation</td><td align="center">Define field relationships between nodes</td></tr><tr><td align="center">Function</td><td align="center">Abstract of T-ability execution function</td></tr><tr><td align="center">FilterFunction</td><td align="center">Function abstraction for data filtering, inherited from function</td></tr><tr><td align="center">SubstringFunction</td><td align="center">Used for string interception function abstraction, inherited from function</td></tr><tr><td align="center">FunctionParam</td><td align="center">Abstraction for function parameters</td></tr><tr><td align="center">ConstantParam</td><td align="center">Encapsulation of function constant parameters, inherited from FunctionParam</td></tr><tr><td align="center">FieldInfo</td><td align="center">The encapsulation of node fields can also be used as function input parameters, inherited from FunctionParam</td></tr><tr><td align="center">MetaFieldInfo</td><td align="center">The encapsulation of built-in fields is currently mainly used in the metadata field scenario of canal JSON, which is inherited from FieldInfo</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-detailed-system-design">4. Detailed System Design<a href="#4-detailed-system-design" class="hash-link" aria-label="Direct link to 4. Detailed System Design" title="Direct link to 4. Detailed System Design">​</a></h2><p>The following describes the principle of SQL generation by taking MySQL synchronizing data to Kafka as an example</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="41-node-described-in-sql">4.1 Node Described in SQL<a href="#41-node-described-in-sql" class="hash-link" aria-label="Direct link to 4.1 Node Described in SQL" title="Direct link to 4.1 Node Described in SQL">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="411-extractnode-described-in-sql">4.1.1 ExtractNode Described in SQL<a href="#411-extractnode-described-in-sql" class="hash-link" aria-label="Direct link to 4.1.1 ExtractNode Described in SQL" title="Direct link to 4.1.1 ExtractNode Described in SQL">​</a></h4><p>The node configuration is:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> private Node buildMySQLExtractNode() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo()));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new MySqlExtractNode("1", "mysql_input", fields,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, null, "id",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                Collections.singletonList("tableName"), "localhost", "root", "password",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                "inlong", null, null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, null);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">mysql_1</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">with</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'connector'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'mysql-cdc-inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'hostname'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'localhost'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'username'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'root'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'password'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'password'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'database-name'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'table-name'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tableName'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="412-transformnode--described-in-sql">4.1.2 TransformNode  Described in SQL<a href="#412-transformnode--described-in-sql" class="hash-link" aria-label="Direct link to 4.1.2 TransformNode  Described in SQL" title="Direct link to 4.1.2 TransformNode  Described in SQL">​</a></h4><p>The node configuration is:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> List&lt;FilterFunction&gt; filters = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(EmptyOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        LessThanOperator.getInstance(), new ConstantParam(25)),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(AndOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        MoreThanOrEqualOperator.getInstance(), new ConstantParam(18))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">mysql_1</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WHERE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain"> </span><span class="token number">25</span><span class="token plain"> </span><span class="token operator">AND</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&gt;=</span><span class="token plain"> </span><span class="token number">18</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="413-loadnode-described-in-sql">4.1.3 LoadNode Described in SQL<a href="#413-loadnode-described-in-sql" class="hash-link" aria-label="Direct link to 4.1.3 LoadNode Described in SQL" title="Direct link to 4.1.3 LoadNode Described in SQL">​</a></h4><p>The node configuration is:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> private Node buildKafkaLoadNode(FilterStrategy filterStrategy) {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo())</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldRelation&gt; relations = Arrays</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                .asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldRelation(new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("name", new StringFormatInfo())),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldRelation(new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("age", new IntFormatInfo()))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FilterFunction&gt; filters = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(EmptyOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        LessThanOperator.getInstance(), new ConstantParam(25)),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new SingleValueFilterFunction(AndOperator.getInstance(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        MoreThanOrEqualOperator.getInstance(), new ConstantParam(18))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new KafkaLoadNode("2", "kafka_output", fields, relations, filters,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                filterStrategy, "topic1", "localhost:9092",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new CanalJsonFormat(), null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, "id");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">TABLE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">kafka_3</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">int</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">with</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'connector'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'kafka-inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'topic'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'topic1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'properties.bootstrap.servers'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'localhost:9092'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'format'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.ignore-parse-errors'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'true'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.map-null-key.mode'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'DROP'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.encode.decimal-as-plain-number'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'true'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.timestamp-format.standard'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'SQL'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'canal-json-inlong.map-null-key.literal'</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'null'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="42-field-t-described-in-sql">4.2 Field T Described in SQL<a href="#42-field-t-described-in-sql" class="hash-link" aria-label="Direct link to 4.2 Field T Described in SQL" title="Direct link to 4.2 Field T Described in SQL">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="421-filter-operator">4.2.1 Filter operator<a href="#421-filter-operator" class="hash-link" aria-label="Direct link to 4.2.1 Filter operator" title="Direct link to 4.2.1 Filter operator">​</a></h4><p>See 4.1 node configuration for relevant configurations</p><p>The generated SQL is:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">INTO</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">kafka_3</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">SELECT</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">name</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">FROM</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">mysql_1</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">WHERE</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain"> </span><span class="token number">25</span><span class="token plain"> </span><span class="token operator">AND</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token identifier">age</span><span class="token identifier punctuation" style="color:rgb(248, 248, 242)">`</span><span class="token plain"> </span><span class="token operator">&gt;=</span><span class="token plain"> </span><span class="token number">18</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="422-watermark">4.2.2 Watermark<a href="#422-watermark" class="hash-link" aria-label="Direct link to 4.2.2 Watermark" title="Direct link to 4.2.2 Watermark">​</a></h4><p>The complete configuration of GroupInfo is as follows:</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">private Node buildMySqlExtractNode() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("ts", new TimestampFormatInfo()));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        WatermarkField wk = new WatermarkField(new FieldInfo("ts", new TimestampFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new StringConstantParam("1"),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new TimeUnitConstantParam(TimeUnit.MINUTE));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new MySqlExtractNode("1", "mysql_input", fields,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                wk, null, "id",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                Collections.singletonList("tableName"), "localhost", "root", "password",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                "inlong", null, null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                null, null);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private Node buildKafkaNode() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldInfo&gt; fields = Arrays.asList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                new FieldInfo("ts", new TimestampFormatInfo()));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;FieldRelation&gt; relations = Arrays</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                .asList(new FieldRelation(new FieldInfo("name", new StringFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("name", new StringFormatInfo())),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                        new FieldRelation(new FieldInfo("age", new IntFormatInfo()),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                                new FieldInfo("age", new IntFormatInfo()))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                );</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new KafkaLoadNode("2", "kafka_output", fields, relations, null, null,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                "topic", "localhost:9092", new JsonFormat(),</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                1, null, "id");</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    private NodeRelation buildNodeRelation(List&lt;Node&gt; inputs, List&lt;Node&gt; outputs) {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;String&gt; inputIds = inputs.stream().map(Node::getId).collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        List&lt;String&gt; outputIds = outputs.stream().map(Node::getId).collect(Collectors.toList());</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new NodeRelation(inputIds, outputIds);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    public GroupInfo getTestObject() {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        Node input = buildMySqlExtractNode();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        Node output = buildKafkaNode();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        StreamInfo streamInfo = new StreamInfo("1", Arrays.asList(input, output), Collections.singletonList(</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                buildNodeRelation(Collections.singletonList(input), Collections.singletonList(output))));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return new GroupInfo("1", Collections.singletonList(streamInfo));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Sort</category>
        </item>
        <item>
            <title><![CDATA[Release 1.1.0]]></title>
            <link>https://inlong.apache.org/blog/2022/04/25/release-1.1.0</link>
            <guid>https://inlong.apache.org/blog/2022/04/25/release-1.1.0</guid>
            <pubDate>Mon, 25 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities. InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities. InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="110-features-overview">1.1.0 Features Overview<a href="#110-features-overview" class="hash-link" aria-label="Direct link to 1.1.0 Features Overview" title="Direct link to 1.1.0 Features Overview">​</a></h2><p>The 1.1.0-incubating just released mainly includes the following:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enhanced-management-capabilities-for-manager">Enhanced management capabilities for manager<a href="#enhanced-management-capabilities-for-manager" class="hash-link" aria-label="Direct link to Enhanced management capabilities for manager" title="Direct link to Enhanced management capabilities for manager">​</a></h3><ul><li>Added Manager Client to support the integration of InLong for creating data streams</li><li>Added ManagerCtl command-line tool to support viewing and creating data streams</li><li>Manager supports dispatching Agent tasks</li><li>Manager supports dispatching Sort Flink tasks</li><li>Manger data streams management, supports start, restart, pause operations</li><li>Manager plugin support</li><li>Manager metadata management supports using MySQL</li><li>The first phase of cluster management, unified cluster information registration</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rich-data-nodes">Rich data nodes<a href="#rich-data-nodes" class="hash-link" aria-label="Direct link to Rich data nodes" title="Direct link to Rich data nodes">​</a></h3><ul><li>Support Iceberg</li><li>Support ClickHouse</li><li>Support MySQL Binlog collection</li><li>Support Kafka ingestion</li><li>Sort Standalone supports multiple type streams</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tools-construction">Tools construction<a href="#tools-construction" class="hash-link" aria-label="Direct link to Tools construction" title="Direct link to Tools construction">​</a></h3><ul><li>Dashboard plugin support</li><li>Kubernetes deployment optimization</li><li>Standalone deployment refactoring</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="system-upgrade">System Upgrade<a href="#system-upgrade" class="hash-link" aria-label="Direct link to System Upgrade" title="Direct link to System Upgrade">​</a></h3><ul><li>Protocol Buffers upgrade</li><li>Unified version Maven version dependencies</li><li>Fixed a bunch of dependency CVEs</li><li>DataProxy supports PB compression protocol</li></ul><p>This version closed about 642+ issues, including four 23 features and 180 improvements.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="110-features-details">1.1.0 Features Details<a href="#110-features-details" class="hash-link" aria-label="Direct link to 1.1.0 Features Details" title="Direct link to 1.1.0 Features Details">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="add-manager-client">Add Manager Client<a href="#add-manager-client" class="hash-link" aria-label="Direct link to Add Manager Client" title="Direct link to Add Manager Client">​</a></h3><p>The newly added Manager Client defines common InLong Group/Stream operation interfaces, including task creation, viewing and deletion. Through Manager Client, users can build InLong into any third-party platform to achieve unified customized platform construction. The Manager Client is mainly designed and implemented by @kipshi, @gong, @ciscozhou, thanks to three contributors.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="add-managerctl-command-line-tool">Add ManagerCtl command line tool<a href="#add-managerctl-command-line-tool" class="hash-link" aria-label="Direct link to Add ManagerCtl command line tool" title="Direct link to Add ManagerCtl command line tool">​</a></h3><p>ManagerCtl is developed based on Manager Client and is a command-line tool for manipulating InLong resources, which can further simplify the use of developers. ManagerCtl was contributed independently by @haifxu and includes guidelines including:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: managerctl [options] [command] [command options]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Options:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">-h, --help</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Get all command about managerctl.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Commands:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">create      Create resource by json file</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: create [options]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">​</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">describe      Display details of one or more resources</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: describe [options]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">​</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">list      Displays main information for one or more resources</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Usage: list [options]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-supports-issuing-sort-tasks">Manager supports issuing Sort tasks<a href="#manager-supports-issuing-sort-tasks" class="hash-link" aria-label="Direct link to Manager supports issuing Sort tasks" title="Direct link to Manager supports issuing Sort tasks">​</a></h3><p>In previous versions, after the user created the data group/stream task, Sort needed to submit it to the Flink cluster through the command line, and then perform data sorting. In version 1.1.0, we unified the start, stop, and suspend operations of Sort tasks to the Manager to complete. Users only need to configure the correct Flink cluster when the Manager is deployed. When the data stream is approved, Sort will be automatically started.
This part of the work is mainly contributed by @LvJiancheng.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="manager-metadata-is-saved-to-zookeeper">Manager metadata is saved to ZooKeeper<a href="#manager-metadata-is-saved-to-zookeeper" class="hash-link" aria-label="Direct link to Manager metadata is saved to ZooKeeper" title="Direct link to Manager metadata is saved to ZooKeeper">​</a></h3><p>InLong uses ZooKeeper to save data stream metadata, which increases the deployment threshold and operation and maintenance difficulty for developers and users.
In version 1.1.0, we save data stream metadata in DB by default, and ZooKeeper is only an optional solution in large-scale scenarios. Thanks to @kipshi @yunqingmoswu for contributing a PR to ZooKeeper.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-mysql-binlog-collection">Support MySQL Binlog collection<a href="#support-mysql-binlog-collection" class="hash-link" aria-label="Direct link to Support MySQL Binlog collection" title="Direct link to Support MySQL Binlog collection">​</a></h3><p>Version 1.1.0 fully supports the collection of data from MySQL, and supports both incremental and full strategies. Users can collect MySQL data with simple configuration in InLong. This part of the work was contributed by @EMsnap.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-added-iceberg-clickhouse-kafka">Sort Added Iceberg, ClickHouse, Kafka<a href="#sort-added-iceberg-clickhouse-kafka" class="hash-link" aria-label="Direct link to Sort Added Iceberg, ClickHouse, Kafka" title="Direct link to Sort Added Iceberg, ClickHouse, Kafka">​</a></h3><p>In version 1.1.0, the storage of data nodes for various scenarios has been added, including Iceberg, ClickHouse, and Kafka. The support of these three streams enriches the usage scenarios of InLong. New stream support, mainly contributed by @chantccc @KevinWen007 @healchow.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sort-standalone-supports-hive-elasticsearch-kafka">Sort Standalone supports Hive, Elasticsearch, Kafka<a href="#sort-standalone-supports-hive-elasticsearch-kafka" class="hash-link" aria-label="Direct link to Sort Standalone supports Hive, Elasticsearch, Kafka" title="Direct link to Sort Standalone supports Hive, Elasticsearch, Kafka">​</a></h3><p>As mentioned in the previous version, for non-Flink environments, we can sort data streams through Sort Standalone. In version 1.1.0, we added support for Hive, ElasticSearch, Kafka, and expanded the usage scenarios of Sort Standalone. Sort Standalone is mainly contributed by @vernedeng @luchunliang.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="protocol-buffers-upgrade">Protocol Buffers upgrade<a href="#protocol-buffers-upgrade" class="hash-link" aria-label="Direct link to Protocol Buffers upgrade" title="Direct link to Protocol Buffers upgrade">​</a></h3><p>All InLong components Protocol Buffers dependencies have been upgraded from 2.5.0 to 3.19.4. Thanks to @gosonzhang @doleyzi for their contributions, a lot of compatibility and testing work for Protocol Buffers upgrades.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inlong-on-kubernetes-optimization">InLong on Kubernetes optimization<a href="#inlong-on-kubernetes-optimization" class="hash-link" aria-label="Direct link to InLong on Kubernetes optimization" title="Direct link to InLong on Kubernetes optimization">​</a></h3><p>The optimization work of InLong on Kubernetes mainly includes adding Audit, combing configuration, optimizing the use of message queues, optimizing the use of documents, etc., to facilitate the use of InLong on the cloud. Thanks to @shink for contributing to these optimizations.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard-plugin">Dashboard plugin<a href="#dashboard-plugin" class="hash-link" aria-label="Direct link to Dashboard plugin" title="Direct link to Dashboard plugin">​</a></h3><p>In order to facilitate users to quickly build new data stream on Dashboard, Dashboard is support plugin in version 1.1.0. JavaScript developers who understand the plugin development guidelines can quickly expand new data stream. Thanks for this part of the work @leezng</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-features-and-bug-fixes">Other features and bug fixes<a href="#other-features-and-bug-fixes" class="hash-link" aria-label="Direct link to Other features and bug fixes" title="Direct link to Other features and bug fixes">​</a></h3><p>For related content, please refer to the version <a href="https://github.com/apache/incubator-inlong/blob/master/CHANGES.md" target="_blank" rel="noopener noreferrer">release notes</a>, which list the features, enhancements and bug fixes of this version in detail, as well as specific contributors.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-follow-up-planning">Apache InLong(incubating) follow-up planning<a href="#apache-inlongincubating-follow-up-planning" class="hash-link" aria-label="Direct link to Apache InLong(incubating) follow-up planning" title="Direct link to Apache InLong(incubating) follow-up planning">​</a></h2><p>In subsequent versions, we will support lightweight Sort, and expand more data sources and targets to cover more usage scenarios, including:</p><ul><li>Flink SQL support</li><li>Elasticsearch, HBase support</li></ul>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Release 0.12.0]]></title>
            <link>https://inlong.apache.org/blog/2022/01/04/release-0.12.0</link>
            <guid>https://inlong.apache.org/blog/2022/01/04/release-0.12.0</guid>
            <pubDate>Tue, 04 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[InLong: the sacred animal in Chinese myths stories, draws rivers into the sea, as a metaphor for the InLong system to provide data access capabilities.]]></description>
            <content:encoded><![CDATA[<p>InLong: the sacred animal in Chinese myths stories, draws rivers into the sea, as a metaphor for the InLong system to provide data access capabilities.</p><p>Apache InLong is a one-stop integration framework for massive data that provides automatic, secure and reliable data transmission capabilities. InLong supports both batch and stream data processing at the same time, which offers great power to build data analysis, modeling and other real-time applications based on streaming data.
The 0.12.0-incubating just released mainly includes the following:</p><ul><li>Provide automatic, safe, reliable and high-performance data transmission capabilities, while supporting batch and streaming</li><li>Refactor the document structure of the official website to facilitate users to consult related documents based on the main line</li><li>The whole process supports Pulsar data flow, and completes the whole process coverage of high-performance and high-reliability scenarios</li><li>Full-process support indicators, including JMX and Prometheus output</li><li>The first phase of data audit and reconciliation, write audit data to MySQL</li></ul><p>This version closed about 120+ issues, including four major features and 35 improvements.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-introduction">Apache InLong(incubating) Introduction<a href="#apache-inlongincubating-introduction" class="hash-link" aria-label="Direct link to Apache InLong(incubating) Introduction" title="Direct link to Apache InLong(incubating) Introduction">​</a></h3><p><a href="https://inlong.apache.org" target="_blank" rel="noopener noreferrer">Apache InLong</a> is a one-stop integration framework for massive data donated by Tencent to the Apache community.  It provides automatic,  safe,  reliable,  and high-performance data transmission capabilities to facilitate the construction of streaming-based data analysis,  modeling,  and applications.<br>
<!-- -->The Apache InLong project was originally called TubeMQ,  focusing on high-performance,  low-cost message queuing services.  In order to further release the surrounding ecological capabilities of TubeMQ,  we upgraded the project to InLong,  focusing on creating a one-stop integration framework for massive data.</p><p>Apache InLong uses TDBank internally used by Tencent as the prototype,  and relies on trillion-level data access and processing capabilities to integrate the entire process of data collection,  aggregation,  storage,  and sorting data processing.  It is simple to use,  flexible to expand,  stable and reliable characteristic.</p><img loading="lazy" src="/img/inlong-structure-en.png" align="center" alt="Apache InLong" class="img_ev3q"><p>Apache InLong serves the entire life cycle from data collection to landing,  and provides different processing modules according to different stages of data,  including the next modules:</p><ul><li><strong>inlong-agent</strong>,  data collection agent, supports reading regular logs from specified directories or files and reporting data one by one.  In the future,  DB collection and HTTP reporting capabilities will also be expanded.</li><li><strong>inlong-dataproxy</strong>,  a Proxy component based on Flume-ng,  supports data transmission blocking,  placing retransmission, and has the ability to forward received data to different MQ (message queues).</li><li><strong>inlong-tubemq</strong>,  Tencent's self-developed message queuing service,  focuses on high-performance storage and transmission of massive data in big data scenarios and has a relatively good core advantage in mass practice and low cost.</li><li><strong>inlong-sort</strong>,  after consuming data from different MQ services,  perform ETL processing,  and then aggregate and write the data into Apache Hive, ClickHouse,  Hbase,  IceBerg,  etc.</li><li><strong>inlong-manager</strong>, provides complete data service management and control capabilities,  including metadata,  OpenAPI,  task flow,  authority,  etc.</li><li><strong>inlong-website</strong>, a front-end page for managing data access,  simplifying the use of the entire InLong control platform.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-new-in-apache-inlongincubating-0120">What’s New in Apache InLong(incubating) 0.12.0<a href="#whats-new-in-apache-inlongincubating-0120" class="hash-link" aria-label="Direct link to What’s New in Apache InLong(incubating) 0.12.0" title="Direct link to What’s New in Apache InLong(incubating) 0.12.0">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-support-apache-pulsar-data-cache">1. Support Apache Pulsar data cache<a href="#1-support-apache-pulsar-data-cache" class="hash-link" aria-label="Direct link to 1. Support Apache Pulsar data cache" title="Direct link to 1. Support Apache Pulsar data cache">​</a></h4><p>In version 0.12.0, we have completed the data reporting capability of FileAgent→DataProxy→Pulsar→Sort. So far, InLong supports high-performance and high-reliability data access scenarios: Compared with the high-throughput TubeMQ, Apache Pulsar can provide better data consistency and is more suitable for scenarios that require extremely high data reliability. For example, finance and billing.</p><img loading="lazy" src="/img/pulsar-arch-en.png" align="center" alt="Report via Pulsar" class="img_ev3q"><p>Thanks to @healchow, @baomingyu, @leezng, @bruceneenhl, @ifndef-SleePy and others for their contributions to this feature. For more information, please refer to <a href="https://github.com/apache/" target="_blank" rel="noopener noreferrer">INLONG-1310</a>incubator-inlong/issues/1310), please refer to <!-- -->[Pulsar usage example]<!-- -->(<a href="https://inlong.apache." target="_blank" rel="noopener noreferrer">https://inlong.apache.</a> org/zh -CN/docs/next/quick_start/pulsar_example/) to get the usage guide.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-support-jmx-and-prometheus-metrics">2. Support JMX and Prometheus metrics<a href="#2-support-jmx-and-prometheus-metrics" class="hash-link" aria-label="Direct link to 2. Support JMX and Prometheus metrics" title="Direct link to 2. Support JMX and Prometheus metrics">​</a></h4><p>In addition to the existing file output metrics, the various components of InLong began to gradually support the output of JMX and Prometheus metrics to improve the visibility of the entire system. Currently, modules including Agent, DataProxy, TubeMQ, Sort-Standalone, etc. already support the above metrics, and the documentation of metrics output by each module is being sorted out.</p><p>Thanks to @shink, @luchunliang, @EMsnap, @gosonzhang and others for their contributions. For related PRs, please see <a href="https://github.com/apache/incubator-inlong/issues/1712" target="_blank" rel="noopener noreferrer">INLONG-1712</a>, <!-- -->[INLONG-1786]<!-- --> (<a href="https://github.com/apache/incubator-inlong/issues/1786" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-inlong/issues/1786</a>), <a href="https://github.com/apache/incubator-inlong/issues/1796" target="_blank" rel="noopener noreferrer">INLONG-1796</a>, <!-- -->[INLONG-1827]<!-- --> (<a href="https://github.com/apache/incubator-inlong/issues/1827" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-inlong/issues/1827</a>), <a href="https://github.com/apache/incubator-inlong/issues/1851" target="_blank" rel="noopener noreferrer">INLONG-1851</a>, <!-- -->[INLONG-1926]<!-- --> (<a href="https://github.com/apache/incubator-inlong/issues/1926" target="_blank" rel="noopener noreferrer">https://github.com/apache/incubator-inlong/issues/1926</a>).</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-function-extension-of-the-modules">3. Function extension of the modules<a href="#3-function-extension-of-the-modules" class="hash-link" aria-label="Direct link to 3. Function extension of the modules" title="Direct link to 3. Function extension of the modules">​</a></h4><p>The Sort module adds support for Apache Doris storage and realizes the ability to load sorted data into Apache Doris, giving InLong one more storage option. In addition, in order to enrich the functions of the entire data access process, the Audit and Sort-Standalone modules have been added:</p><ul><li>The Audit module provides the ability to reconcile the entire process of data flow, and monitor the service quality of the system through data flow indicators;</li><li>Sort-Standalone module is a non-Flink-based data sorting module. It adds lightweight data sorting capabilities to the system, facilitating the rapid construction and use of businesses.</li></ul><p>The Audit and Sort-Standalone modules are still under development and will be released when the version is stable.</p><p>Thanks to @huzk8, @doleyzi, @luchunliang and others for their contributions, please refer to <a href="https://github.com/apache/incubator-inlong/issues/1821" target="_blank" rel="noopener noreferrer">INLONG-1821</a>, <!-- -->[INLONG-1738]<!-- -->( https: / /github.com/apache/incubator-inlong/issues/1738), <a href="https://github.com/apache/incubator-inlong/issues/1889" target="_blank" rel="noopener noreferrer">INLONG-1889</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="4-official-website-document-directory-reconstruction">4. Official website document directory reconstruction<a href="#4-official-website-document-directory-reconstruction" class="hash-link" aria-label="Direct link to 4. Official website document directory reconstruction" title="Direct link to 4. Official website document directory reconstruction">​</a></h4><p>In addition to the improvement of functional modules in version 0.12.0, the official website structure and the use of documents have also been deeply adjusted, including the reconstruction of the document directory structure, supplementing and improving the function introduction of each module, adding document translation, and further improving the documentation of the InLong official website. Readability, to achieve quick search and easy reading. You can check the official website to understand this content. The document is still under construction. We welcome your valuable comments or suggestions.</p><p>Thanks to @bluewang, @dockerzhang, @healchow and others for their contributions, please refer to <a href="https://github.com/apache/incubator-inlong/issues/1711" target="_blank" rel="noopener noreferrer">INLONG-1711</a>, <!-- -->[INLONG-1740]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1740), <a href="https://github.com/apache/incubator-inlong/issues/1802" target="_blank" rel="noopener noreferrer">INLONG-1802</a>, <!-- -->[INLONG-1809]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1809), <a href="https://github.com/apache/incubator-inlong/issues/1810" target="_blank" rel="noopener noreferrer">INLONG-1810</a>, <!-- -->[INLONG-1815]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1815), <a href="https://github.com/apache/incubator-inlong/issues/1822" target="_blank" rel="noopener noreferrer">INLONG-1822</a>, <!-- -->[INLONG-1840]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1840), <a href="https://github.com/apache/incubator-inlong/issues/1856" target="_blank" rel="noopener noreferrer">INLONG-1856</a>, <!-- -->[INLONG-1861]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1861), <a href="https://github.com/apache/incubator-inlong/issues/1867" target="_blank" rel="noopener noreferrer">INLONG-1867</a>, <!-- -->[INLONG-1878]<!-- -->(https: //github.com/apache/incubator-inlong/issues/1878), <a href="https://github.com/apache/incubator-inlong/issues/1901" target="_blank" rel="noopener noreferrer">INLONG-1901</a>, <!-- -->[INLONG-1939]<!-- -->(https: //gith ub.com/apache/incubator-inlong/issues/1939).</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="5-other-features-and-bug-fixes">5. Other features and bug fixes<a href="#5-other-features-and-bug-fixes" class="hash-link" aria-label="Direct link to 5. Other features and bug fixes" title="Direct link to 5. Other features and bug fixes">​</a></h4><p>For related content, please refer to <a href="https://github.com/apache/incubator-inlong/blob/0.12.0-incubating-RC0/CHANGES.md" target="_blank" rel="noopener noreferrer">Version Release Notes</a>, which lists the detailed features of this version, Improvements, bug fixes, and specific contributors.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-follow-up-planning">Apache InLong(incubating) follow-up planning<a href="#apache-inlongincubating-follow-up-planning" class="hash-link" aria-label="Direct link to Apache InLong(incubating) follow-up planning" title="Direct link to Apache InLong(incubating) follow-up planning">​</a></h3><p>In subsequent versions, we will further enhance the capabilities of InLong to cover more usage scenarios, including:</p><ul><li>Support link for data access ClickHouse</li><li>Support DB data collection</li><li>The second stage full link indicator audit function</li></ul>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
        <item>
            <title><![CDATA[Release 0.11.0]]></title>
            <link>https://inlong.apache.org/blog/2021/11/10/release-0.11.0</link>
            <guid>https://inlong.apache.org/blog/2021/11/10/release-0.11.0</guid>
            <pubDate>Wed, 10 Nov 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache InLong (incubating)  has been renamed from the original Apache TubeMQ (incubating) from 0.9.0.  With the name change,  InLong has also been upgraded from a single message queue to a one-stop integration framework for massive data.  InLong supports data collection,  aggregation,  caching,  and sorting,  users can import data from the data source to the real-time computing engine or land to offline storage with a simple configuration.]]></description>
            <content:encoded><![CDATA[<p>Apache InLong (incubating)  has been renamed from the original Apache TubeMQ (incubating) from 0.9.0.  With the name change,  InLong has also been upgraded from a single message queue to a one-stop integration framework for massive data.  InLong supports data collection,  aggregation,  caching,  and sorting,  users can import data from the data source to the real-time computing engine or land to offline storage with a simple configuration.</p><p>The just-released version <code>0.11.0-incubating</code> is the third version after the name changed.  This version includes next features:</p><ul><li>Lower the user's threshold for use further.  Support all modules of InLong to be deployed on Kubernetes,  and refactor the official website,  so that users can more easily access related documents.</li><li>Support more usage scenarios,  increase the data flow direction of <code>Dataproxy -&gt; Pulsar</code>,  and cover scenarios with higher requirements for data integrity and consistency.</li><li>Supports SDKs in more languages for TubeMQ.  This version opens the production-level TubeMQ Go SDK, which is convenient for users who use the Go language to access</li></ul><p>This version closed more than 80 issues, including four significant features and 35 improvements.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-introduction">Apache InLong(incubating) Introduction<a href="#apache-inlongincubating-introduction" class="hash-link" aria-label="Direct link to Apache InLong(incubating) Introduction" title="Direct link to Apache InLong(incubating) Introduction">​</a></h3><p><a href="https://inlong.apache.org" target="_blank" rel="noopener noreferrer">Apache InLong</a> is a one-stop integration framework for massive data donated by Tencent to the Apache community.  It provides automatic,  safe,  reliable,  and high-performance data transmission capabilities to facilitate the construction of streaming-based data analysis,  modeling,  and applications.<br>
<!-- -->The Apache InLong project was originally called TubeMQ,  focusing on high-performance,  low-cost message queuing services.  In order to further release the surrounding ecological capabilities of TubeMQ,  we upgraded the project to InLong,  focusing on creating a one-stop integration framework for massive data.</p><p>Apache InLong uses TDBank internally used by Tencent as the prototype,  and relies on trillion-level data access and processing capabilities to integrate the entire process of data collection,  aggregation,  storage,  and sorting data processing.  It is simple to use,  flexible to expand,  stable and reliable characteristic.</p><img loading="lazy" src="/img/inlong-structure-en.png" align="center" alt="Apache InLong" class="img_ev3q"><p>Apache InLong serves the entire life cycle from data collection to landing,  and provides different processing modules according to different stages of data,  including the next modules:</p><ul><li><strong>inlong-agent</strong>,  data collection agent, supports reading regular logs from specified directories or files and reporting data one by one.  In the future,  DB collection and HTTP reporting capabilities will also be expanded.</li><li><strong>inlong-dataproxy</strong>,  a Proxy component based on Flume-ng,  supports data transmission blocking,  placing retransmission, and has the ability to forward received data to different MQ (message queues).</li><li><strong>inlong-tubemq</strong>,  Tencent's self-developed message queuing service,  focuses on high-performance storage and transmission of massive data in big data scenarios and has a relatively good core advantage in mass practice and low cost.</li><li><strong>inlong-sort</strong>,  after consuming data from different MQ services,  perform ETL processing,  and then aggregate and write the data into Apache Hive, ClickHouse,  Hbase,  IceBerg,  etc.</li><li><strong>inlong-manager</strong>, provides complete data service management and control capabilities,  including metadata,  OpenAPI,  task flow,  authority,  etc.</li><li><strong>inlong-website</strong>, a front-end page for managing data access,  simplifying the use of the entire InLong control platform.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-new-in-apache-inlongincubating-0110">What’s New in Apache InLong(incubating) 0.11.0<a href="#whats-new-in-apache-inlongincubating-0110" class="hash-link" aria-label="Direct link to What’s New in Apache InLong(incubating) 0.11.0" title="Direct link to What’s New in Apache InLong(incubating) 0.11.0">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="inlong-on-kubernetes">InLong on Kubernetes<a href="#inlong-on-kubernetes" class="hash-link" aria-label="Direct link to InLong on Kubernetes" title="Direct link to InLong on Kubernetes">​</a></h4><p>Apache InLong includes multiple components such as data collection,  data aggregation,  data caching,  data sorting,  and cluster management and control.  In order to facilitate users to use and support cloud-native features,  all components currently support deployment in Kubernetes.
Thanks to @shink for contributing to this feature.  For specific details,  please refer to <a href="https://github.com/apache/incubator-inlong/issues/1308" target="_blank" rel="noopener noreferrer">INLONG-1308</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="open-up-dataproxy-pulsar-data-flow">Open up dataproxy-&gt;pulsar data flow<a href="#open-up-dataproxy-pulsar-data-flow" class="hash-link" aria-label="Direct link to Open up dataproxy->pulsar data flow" title="Direct link to Open up dataproxy->pulsar data flow">​</a></h4><p>Before version 0.11.0,  InLong's data caching layer could only support TubeMQ.  TubeMQ is very suitable for scenarios with huge data volumes,  but in extreme scenarios,  there may be a small amount of data loss. To provide data reliability, the Inlong added support for Apache Pulsar in version 0.11.0.  Now InLong backend can support data flow <code>agent -&gt; dataProxy -&gt; tubeMQ/pulsar -&gt; sort.</code> The introduction of Pulsar makes the application scenarios covered by InLong more abundant,  which could meet the needs of more users.
Thanks to @baomingyu for his contribution to this feature.  For more details,  please refer to <a href="https://github.com/apache/incubator-inlong/issues/1330" target="_blank" rel="noopener noreferrer">INLONG-1330</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="go-sdk-for-inlong-tubemq">Go SDK for InLong TubeMQ<a href="#go-sdk-for-inlong-tubemq" class="hash-link" aria-label="Direct link to Go SDK for InLong TubeMQ" title="Direct link to Go SDK for InLong TubeMQ">​</a></h4><p>Before version 0.11.0,  InLong TubeMQ supports SDKs in three languages:  Java,  C++,  and Python.  With more and more applications of Go language,  the demand for Go language SDK in the community is also increasing. Version 0.11.0 was officially introduced to the Go language SDK of TubeMQ.  The multilingual SDK is enriched,  and the difficulty of access and use for Go language users is also reduced.
Thanks to @TszKitLo40 for contributing to this feature. For more details, please refer to:</p><ul><li><a href="https://github.com/apache/incubator-inlong/issues/624" target="_blank" rel="noopener noreferrer">INLONG-624</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1570" target="_blank" rel="noopener noreferrer">INLONG-1578</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1584" target="_blank" rel="noopener noreferrer">INLONG-1584</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1666" target="_blank" rel="noopener noreferrer">INLONG-1666</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1682" target="_blank" rel="noopener noreferrer">INLONG-1682</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="refactor-the-official-website">refactor the official website<a href="#refactor-the-official-website" class="hash-link" aria-label="Direct link to refactor the official website" title="Direct link to refactor the official website">​</a></h4><p>In version 0.11.0,  InLong uses Docusaurus to refactor the <a href="https://inlong.apache.org/" target="_blank" rel="noopener noreferrer">official website</a> to provide a more concise and intuitive document management and display.
Thanks to @leezng for his contribution to this feature. For more details,  please refer to:</p><ul><li><a href="https://github.com/apache/incubator-inlong/issues/1631" target="_blank" rel="noopener noreferrer">INLONG-1631</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1632" target="_blank" rel="noopener noreferrer">INLONG-1632</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1633" target="_blank" rel="noopener noreferrer">INLONG-1633</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1634" target="_blank" rel="noopener noreferrer">INLONG-1634</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1635" target="_blank" rel="noopener noreferrer">INLONG-1635</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1636" target="_blank" rel="noopener noreferrer">INLONG-1636</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1637" target="_blank" rel="noopener noreferrer">INLONG-1637</a></li><li><a href="https://github.com/apache/incubator-inlong/issues/1638" target="_blank" rel="noopener noreferrer">INLONG-1638</a></li></ul><p>In addition to the above major features,  InLong 0.11.0 version has other key improvements,  including but not limited to:</p><ul><li>Added contribution guidelines in the main Repo,  <a href="https://github.com/apache/incubator-inlong/issues/1623" target="_blank" rel="noopener noreferrer">INLONG-1623</a></li><li>Add Inlong-Manager to DataProxy configuration management, <a href="https://github.com/apache/incubator-inlong/issues/1595" target="_blank" rel="noopener noreferrer">INLONG-1595</a></li><li>Optimized the GitHub issue template, <a href="https://github.com/apache/incubator-inlong/issues/1585" target="_blank" rel="noopener noreferrer">INLONG-1585</a></li><li>Code Checkstyle optimization, <a href="https://github.com/apache/incubator-inlong/issues/1571" target="_blank" rel="noopener noreferrer">INLONG-1571</a>, <a href="https://github.com/apache/incubator-inlong/issues/1593" target="_blank" rel="noopener noreferrer">INLONG-1593</a>, <a href="https://github.com/apache/incubator-inlong/issues/1593" target="_blank" rel="noopener noreferrer">INLONG-1593</a>, <a href="https://github.com/apache/incubator-inlong/issues/1662" target="_blank" rel="noopener noreferrer">INLONG-1662</a></li><li>Agent introduces message filter, <a href="https://github.com/apache/incubator-inlong/issues/1641" target="_blank" rel="noopener noreferrer">INLONG-1641</a></li></ul><p>The 0.11.0 version also fixes ~45 bugs. Thanks to all the contributions who have contributed to the Inlong community (in no particular order):</p><ul><li>shink</li><li>baomingyu</li><li>TszKitLo40</li><li>leezng</li><li>ruanwenjun</li><li>leo65535</li><li>luchunliang</li><li>pierre94</li><li>EMsnap</li><li>dockerzhang</li><li>gosonzhang</li><li>healchow</li><li>guangxuCheng</li><li>yuanboliu</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="apache-inlongincubating-follow-up-planning">Apache InLong(incubating) follow-up planning<a href="#apache-inlongincubating-follow-up-planning" class="hash-link" aria-label="Direct link to Apache InLong(incubating) follow-up planning" title="Direct link to Apache InLong(incubating) follow-up planning">​</a></h3><p>In the subsequent version planning of InLong, we will further release the capabilities of InLong to cover more usage scenarios, mainly including</p><ul><li>Support Apache Pulsar full link data access capabilities, including back-end processing and front-end management capabilities.</li><li>Support data flow such as ClickHouse,  Apache Iceberg,  Apache HBase, etc.</li></ul>]]></content:encoded>
            <category>Apache InLong</category>
            <category>Version</category>
        </item>
    </channel>
</rss>